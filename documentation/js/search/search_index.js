var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddPlayersComponent.html",[0,0.338,1,0.799]],["body/components/AddPlayersComponent.html",[0,0.477,1,1.042,2,1.021,3,0.272,4,0.237,5,0.726,6,0.726,7,0.726,8,0.726,9,0.237,10,4.331,11,3.719,12,1.494,13,1.391,14,1.536,15,2.149,16,0.726,17,2.071,18,2.071,19,2.824,20,1.129,21,3.488,22,3.466,23,1.129,24,2.824,25,0.237,26,0.424,27,2.456,28,3.466,29,1.609,30,3.466,31,4.487,32,4.684,33,3.466,34,0.923,35,2.425,36,2.153,37,3.911,38,0.481,39,1.494,40,3.172,41,2.308,42,2.578,43,2.076,44,4.684,45,2.552,46,2.904,47,2.854,48,3.22,49,0.883,50,2.824,51,0.272,52,0.04,53,0.587,54,0.527,55,0.272,56,1.815,57,1.751,58,2.824,59,1.155,60,1.466,61,1.815,62,3.22,63,2.666,64,2.765,65,1.996,66,2.325,67,3.172,68,2.854,69,2.824,70,2.824,71,1.555,72,2.325,73,1.815,74,2.824,75,1.502,76,1.536,77,3.911,78,1.391,79,3.002,80,2.45,81,2.824,82,2.824,83,1.996,84,2.765,85,2.824,86,2.325,87,2.149,88,2.325,89,3.466,90,2.824,91,1.391,92,3.305,93,1.123,94,1.123,95,2.824,96,3.911,97,2.824,98,2.824,99,2.824,100,2.824,101,2.824,102,1.815,103,0.923,104,1.708,105,1.815,106,1.815,107,1.815,108,1.815,109,1.129,110,1.815,111,1.01,112,1.815,113,1.815,114,1.815,115,1.815,116,1.815,117,1.815,118,1.815,119,0.349,120,1.815,121,1.283,122,0.999,123,0.894,124,0.999,125,0.999,126,0.804,127,0.894,128,1.494,129,1.125,130,1.494,131,0.656,132,1.494,133,1.125,134,1.283,135,1.283,136,1.494,137,1.283,138,1.815,139,1.283,140,0.272,141,0.143,142,1.494,143,1.283,144,1.283,145,1.133,146,2.149,147,2.765,148,1.815,149,1.253,150,1.253,151,1.253,152,1.815,153,2.824,154,1.815,155,1.815,156,3.466,157,1.815,158,1.815,159,1.815,160,2.824,161,1.815,162,1.815,163,1.815,164,1.815,165,1.815,166,1.125,167,1.125,168,1.815,169,1.815,170,2.45,171,1.815,172,1.815,173,1.494,174,1.494,175,1.494,176,1.494,177,1.815,178,1.815,179,1.815,180,1.815,181,1.815,182,1.815,183,1.815,184,1.283,185,0.804,186,2.824,187,3.503,188,2.824,189,2.824,190,2.824,191,2.824,192,2.824,193,2.824,194,2.824,195,2.824,196,2.824,197,2.824,198,2.824,199,2.824,200,0.726,201,1.129,202,1.129,203,0.726,204,1.564,205,0.726,206,0.726,207,0.484,208,0.726,209,0.484,210,0.726,211,0.484,212,0.726,213,0.484,214,0.726,215,0.726,216,0.484,217,0.726,218,0.536,219,0.726,220,0.484,221,0.484,222,0.39,223,0.726,224,0.484,225,0.656,226,0.726,227,0.726,228,0.018,229,0.018]],["title/components/AppComponent.html",[0,0.338,207,0.799]],["body/components/AppComponent.html",[0,0.547,1,0.879,2,1.57,3,0.495,4,0.432,5,1.32,6,1.32,7,1.32,8,1.32,9,0.432,16,1.32,17,2.345,18,2.395,20,1.738,23,1.738,25,0.568,26,0.652,38,0.562,46,3.2,49,0.828,51,0.495,52,0.04,53,0.635,54,0.489,55,0.495,93,1.042,94,1.042,109,1.32,111,0.933,119,0.634,126,1.463,127,1.626,140,0.495,141,0.26,149,1.193,150,1.866,151,1.866,187,2.046,200,1.32,201,1.738,202,1.738,203,1.32,204,2.064,205,1.32,206,1.32,207,1.376,208,1.32,209,0.879,210,1.32,211,0.879,212,1.32,213,0.879,214,1.32,215,1.32,216,0.879,217,1.32,218,0.975,219,1.32,220,0.879,221,0.879,222,0.71,223,1.32,224,0.879,225,1.193,226,1.32,227,1.32,228,0.028,229,0.028,230,2.717,231,2.141,232,4.858,233,4.346,234,4.858,235,3.091,236,3.578,237,4.346,238,4.535,239,3.301,240,3.301,241,3.301,242,3.301,243,4.346,244,3.301,245,2.717,246,2.046,247,3.2,248,3.012,249,3.301,250,3.301,251,2.333,252,2.717,253,3.301,254,3.301,255,3.301,256,3.301,257,2.333]],["title/modules/AppModule.html",[258,2.468,259,1.858]],["body/modules/AppModule.html",[0,0.449,1,1.413,3,0.435,4,0.379,9,0.379,11,2.051,52,0.04,71,1.597,75,0.857,91,1.429,104,1.429,111,1.152,119,0.557,121,2.051,122,1.597,123,1.429,124,1.597,125,2.505,126,2.017,127,1.429,140,0.598,141,0.229,170,2.816,207,1.541,209,1.413,211,1.448,213,1.448,216,1.413,218,1.567,220,1.413,222,0.857,224,1.413,228,0.026,229,0.026,259,3.748,260,2.051,261,2.47,262,2.388,263,2.388,264,2.388,265,3.28,266,1.798,267,1.798,268,1.798,269,3.984,270,3.984,271,3.984,272,3.28,273,2.051,274,3.984,275,2.901,276,2.051,277,2.901,278,2.901,279,3.28,280,2.051,281,3.984,282,3.984,283,2.901,284,3.984,285,2.901,286,2.901,287,2.388,288,2.901,289,2.901,290,2.901,291,2.901,292,2.051,293,2.901,294,2.901,295,3.217,296,2.901,297,3.984,298,2.901,299,3.747,300,3.984,301,2.901,302,2.901,303,2.388,304,3.28,305,2.901,306,2.901,307,2.901,308,2.051,309,2.901,310,2.051,311,2.388,312,2.388,313,2.388,314,2.388,315,2.388,316,2.388,317,3.984,318,1.798,319,2.388,320,1.429,321,2.901,322,2.901,323,2.901,324,2.901,325,2.901,326,2.901,327,2.901,328,2.901,329,2.388,330,2.901,331,2.901,332,2.051,333,2.901,334,2.901]],["title/injectables/ClientService.html",[335,0.885,336,1.65]],["body/injectables/ClientService.html",[3,0.539,4,0.47,9,0.47,25,0.47,26,0.689,27,2.243,34,1.501,38,0.862,49,0.909,51,0.539,52,0.04,53,0.47,54,0.517,55,0.539,59,1.494,60,1.174,75,1.356,93,0.862,94,0.862,103,1.743,111,0.882,119,0.69,131,1.299,140,0.539,141,0.283,145,1.501,149,1.66,150,1.66,151,1.66,221,0.958,225,2.096,228,0.03,229,0.03,231,1.771,320,1.771,335,1.356,336,2.528,337,1.771,338,2.959,339,4.391,340,5.333,341,4.592,342,4.592,343,3.594,344,2.528,345,3.552,346,3.306,347,3.103,348,4.592,349,3.594,350,2.847,351,3.246,352,4.167,353,4.592,354,2.847,355,1.978,356,1.836,357,3.594,358,2.528,359,1.437,360,3.594,361,3.594,362,3.594,363,3.594]],["title/injectables/DiceService.html",[41,1.477,335,0.885]],["body/injectables/DiceService.html",[3,0.372,4,0.324,9,0.324,25,0.324,26,0.535,29,1.793,34,1.165,38,0.712,41,1.756,49,0.937,51,0.627,52,0.04,53,0.546,54,0.47,55,0.627,59,1.599,60,1.647,75,1.689,93,1.002,94,1.002,103,1.737,111,0.802,119,0.476,131,0.895,140,0.372,141,0.195,145,1.647,149,1.822,150,1.822,151,1.822,221,1.417,228,0.023,229,0.023,231,1.22,266,3.569,320,2.058,335,1.053,337,1.22,344,2.775,345,3.59,346,3.486,347,3.188,350,2.832,351,3.564,354,3.518,355,1.363,356,2.016,358,2.775,359,1.67,364,2.039,365,4.011,366,3.438,367,4.568,368,4.568,369,4.568,370,3.565,371,3.565,372,3.565,373,3.565,374,2.476,375,2.476,376,4.377,377,2.476,378,3.565,379,2.385,380,2.476,381,2.058,382,2.52,383,3.565,384,2.476,385,3.565,386,2.476,387,2.476,388,2.476,389,2.039,390,2.476,391,2.476,392,2.476,393,2.476,394,2.476,395,2.476,396,2.476,397,2.476,398,2.476,399,2.476,400,2.476,401,2.476]],["title/components/DicesComponent.html",[0,0.338,209,0.799]],["body/components/DicesComponent.html",[0,0.256,1,0.266,2,0.623,3,0.15,4,0.13,5,0.399,6,0.399,7,0.399,8,0.399,9,0.13,13,0.849,14,1.009,15,1.412,16,0.399,17,1.708,18,1.708,20,0.689,23,0.689,25,0.225,26,0.259,27,2.505,29,1.685,34,0.563,35,1.682,36,1.493,38,0.294,41,1.652,43,1.594,45,1.772,49,0.919,51,0.259,52,0.04,53,0.355,54,0.551,55,0.407,57,1.069,59,1.062,60,1.396,63,1.493,67,1.61,75,1.608,76,1.594,78,0.491,80,1.61,84,1.917,87,2.357,88,3.615,92,3.287,93,1.214,94,1.236,103,1.243,104,2.682,111,0.764,119,0.191,128,0.821,129,1.069,131,0.36,132,0.821,136,0.821,137,0.705,139,0.705,140,0.15,141,0.079,142,0.821,144,1.917,145,1.175,146,2.079,147,1.219,149,1.212,150,1.212,151,1.212,166,1.899,167,1.899,185,2.036,200,0.399,201,0.689,202,0.689,203,0.399,204,1.903,205,0.399,206,0.399,207,0.266,208,0.399,209,0.723,210,0.399,211,0.266,212,0.399,213,0.266,214,0.399,215,0.399,216,0.266,217,0.399,218,0.294,219,0.399,220,0.266,221,0.266,222,0.214,223,0.399,224,0.266,225,1.3,226,0.399,227,0.399,228,0.011,229,0.011,246,0.618,247,1.412,248,1.682,251,0.705,266,0.618,267,2.722,318,1.069,336,1.98,339,1.875,345,0.618,356,0.399,359,0.911,365,3.924,366,2.961,376,0.821,379,1.961,381,0.491,382,1.219,402,0.821,403,1.724,404,2.277,405,1.724,406,2.277,407,2.277,408,2.277,409,2.37,410,2.277,411,1.875,412,2.277,413,2.277,414,2.277,415,2.277,416,2.277,417,2.277,418,2.277,419,2.277,420,2.277,421,2.277,422,2.713,423,2.713,424,2.277,425,2.713,426,1.724,427,0.821,428,1.724,429,0.997,430,2.713,431,3.354,432,0.997,433,3.803,434,1.724,435,1.724,436,1.724,437,1.724,438,2.233,439,1.724,440,1.724,441,1.61,442,1.724,443,3.354,444,1.724,445,2.713,446,1.219,447,1.724,448,2.713,449,1.724,450,2.713,451,1.419,452,2.713,453,0.997,454,2.233,455,2.522,456,1.724,457,1.724,458,1.724,459,1.724,460,0.997,461,2.233,462,0.997,463,1.419,464,1.724,465,1.875,466,2.688,467,1.724,468,1.069,469,1.219,470,1.724,471,1.724,472,0.997,473,1.724,474,1.685,475,0.997,476,1.724,477,2.713,478,1.724,479,0.997,480,3.034,481,0.997,482,2.713,483,0.997,484,0.997,485,0.997,486,0.997,487,2.713,488,2.713,489,2.713,490,2.713,491,2.713,492,0.997,493,1.724,494,0.997,495,0.997,496,0.997,497,2.277,498,0.997,499,2.277,500,0.997,501,2.277,502,0.997,503,2.277,504,0.997,505,2.277,506,0.997,507,0.997,508,0.997,509,0.997,510,0.997,511,0.997,512,0.997,513,2.713,514,2.277,515,2.233,516,2.277,517,2.277,518,2.277,519,0.705,520,0.997,521,0.997,522,0.821,523,0.997,524,0.997,525,0.997,526,0.997,527,0.997,528,0.997,529,0.997,530,1.724,531,0.997,532,0.997,533,0.705,534,0.997,535,2.277,536,0.997,537,1.724,538,0.997,539,0.997,540,1.724,541,0.997,542,0.997,543,0.997,544,0.997,545,3.064,546,0.997,547,1.724,548,1.724,549,2.233,550,0.997,551,0.997,552,0.997,553,1.724,554,0.997,555,2.277,556,0.997,557,0.997,558,0.997,559,1.724,560,0.997,561,0.821,562,0.821,563,0.997,564,0.997,565,3.064,566,2.277,567,3.064,568,3.064,569,2.277,570,0.821,571,2.277,572,1.419,573,2.277,574,0.705,575,2.277,576,0.997,577,0.997,578,0.997,579,0.997,580,2.277,581,1.724,582,1.724,583,0.997,584,0.997,585,0.997,586,0.997,587,0.997,588,1.724,589,5.588,590,5.334,591,4.439,592,0.997,593,3.244,594,2.277,595,0.997,596,3.354,597,0.997,598,2.961,599,3.354,600,3.019,601,2.761,602,2.277,603,0.997,604,0.997,605,0.997,606,0.997,607,1.724,608,2.713,609,2.713,610,1.724,611,1.724,612,2.688,613,1.724,614,1.724,615,2.713,616,1.419,617,1.724,618,2.713,619,2.468,620,2.713,621,4.135,622,4.391,623,2.713,624,3.064,625,0.821,626,1.724,627,1.724,628,0.997,629,0.997,630,0.997,631,0.997,632,0.997,633,0.997,634,0.997,635,3.064,636,1.419,637,0.997,638,1.724,639,0.997,640,0.997,641,0.821,642,0.997,643,0.997,644,0.997,645,1.724,646,0.997,647,0.821,648,0.997,649,0.997,650,1.724,651,0.997,652,1.724,653,0.997,654,0.997,655,0.997,656,0.705,657,0.997,658,0.997,659,1.724,660,1.419,661,0.997,662,0.997,663,0.997,664,0.997,665,0.997,666,0.997,667,0.821,668,0.997,669,0.821,670,1.724,671,0.997,672,0.997,673,0.705]],["title/classes/Die.html",[141,0.236,379,1.477]],["body/classes/Die.html",[3,0.608,4,0.53,9,0.53,25,0.53,26,0.743,29,1.766,38,0.691,49,0.949,51,0.608,52,0.039,53,0.53,54,0.627,55,0.608,103,1.866,140,0.608,141,0.32,228,0.032,229,0.032,379,2.898,474,2.667,674,2.514,675,3.338,676,5.881,677,5.881,678,4.952,679,4.952,680,4.055,681,4.055,682,4.055,683,4.055,684,4.055]],["title/components/GameComponent.html",[0,0.338,211,0.799]],["body/components/GameComponent.html",[0,0.409,1,0.522,2,1.082,3,0.294,4,0.256,5,0.783,6,0.783,7,0.783,8,0.783,9,0.256,13,1.475,14,1.611,15,2.254,16,0.783,17,2.111,18,2.111,20,1.197,23,1.197,25,0.476,26,0.449,27,2.533,29,1.503,34,0.979,35,2.524,36,2.241,38,0.334,40,3.403,43,2.05,45,2.372,49,0.913,51,0.294,52,0.04,53,0.605,54,0.585,55,0.294,57,1.856,59,1.074,60,1.33,63,2.001,64,1.384,65,1.384,67,3.27,71,2.65,75,1.533,78,1.791,79,2.984,83,3.67,87,2.524,91,2.006,92,3.591,93,1.22,94,1.22,103,0.979,104,1.475,111,0.888,119,0.376,122,1.078,129,1.214,130,1.612,131,0.708,137,1.384,139,1.384,140,0.294,141,0.154,144,2.878,145,0.979,146,1.856,149,1.082,150,1.082,151,1.082,166,1.856,167,1.856,184,1.384,185,1.611,200,0.783,201,1.197,202,1.197,203,0.783,204,1.628,205,0.783,206,0.783,207,0.522,208,0.783,209,0.522,210,0.783,211,1.085,212,0.783,213,0.522,214,0.783,215,0.783,216,0.522,217,0.783,218,0.578,219,0.783,220,0.522,221,0.522,222,0.421,223,0.783,224,0.522,225,0.708,226,0.783,227,0.783,228,0.019,229,0.019,245,2.465,246,1.856,251,1.384,252,2.465,441,3.101,451,2.465,461,2.465,466,3.101,469,2.117,474,1.944,480,2.65,561,1.612,562,1.612,570,2.465,572,1.612,574,1.384,593,2.254,598,1.612,601,2.993,616,1.612,619,1.214,625,1.612,641,2.993,647,1.612,656,2.117,660,1.612,669,2.465,685,1.612,686,3.636,687,2.995,688,5.088,689,3.636,690,4.626,691,3.636,692,1.612,693,2.995,694,1.958,695,1.958,696,3.352,697,3.636,698,3.963,699,2.995,700,1.856,701,2.995,702,2.995,703,1.958,704,1.958,705,1.958,706,1.958,707,1.958,708,1.958,709,1.958,710,1.958,711,4.814,712,4.387,713,4.387,714,3.636,715,4.072,716,1.958,717,1.612,718,1.958,719,2.465,720,0.868,721,1.612,722,1.612,723,1.384,724,1.612,725,1.612,726,1.612,727,1.612,728,1.612,729,1.612,730,1.612,731,1.612,732,1.958,733,1.958,734,4.072,735,1.958,736,1.958,737,1.958,738,1.958,739,1.384,740,1.958,741,1.958,742,1.958,743,1.958,744,1.958,745,1.958,746,1.958,747,1.958,748,1.958,749,1.958,750,3.636,751,2.995,752,2.995,753,1.958,754,3.636,755,2.995,756,2.995,757,2.995,758,1.958,759,1.958]],["title/components/LandingPageComponent.html",[0,0.338,213,0.799]],["body/components/LandingPageComponent.html",[0,0.568,1,0.951,2,1.653,3,0.536,4,0.467,5,1.428,6,1.428,7,1.428,8,1.428,9,0.467,14,1.582,16,1.428,17,2.374,18,2.374,20,1.829,23,1.829,38,0.608,39,2.94,40,3.977,49,0.608,51,0.536,52,0.04,53,0.66,54,0.402,55,0.536,91,1.759,111,0.878,119,0.686,122,1.966,140,0.536,141,0.281,184,2.524,185,1.582,200,1.428,201,1.829,202,1.829,203,1.428,204,2.127,205,1.428,206,1.428,207,0.951,208,1.428,209,0.951,210,1.428,211,0.951,212,1.428,213,1.418,214,2.317,215,1.428,216,0.951,217,1.428,218,1.054,219,1.428,220,0.951,221,0.951,222,0.768,223,1.428,224,0.951,225,1.29,226,1.428,227,1.428,228,0.03,229,0.03,292,3.233,719,3.765,720,1.582,721,2.94,722,2.94,723,2.524,724,2.94,725,2.94,726,2.94,727,2.94,728,2.94,729,2.94,730,2.94,731,2.94,760,3.765,761,2.94,762,3.765,763,5.046,764,4.573,765,3.571]],["title/components/LanguageComponent.html",[0,0.338,216,0.799]],["body/components/LanguageComponent.html",[0,0.492,1,0.716,2,1.365,3,0.403,4,0.351,5,1.074,6,1.074,7,1.074,8,1.074,9,0.351,13,1.861,14,1.936,15,2.708,16,1.074,17,2.262,18,2.262,20,1.511,23,1.511,25,0.351,26,0.567,27,1.936,29,1.29,34,1.234,35,2.708,36,2.609,38,0.458,46,2.938,49,0.882,51,0.567,52,0.04,53,0.62,54,0.534,55,0.567,57,1.666,59,1.29,60,1.549,75,1.115,78,1.861,92,3.096,93,0.906,94,0.906,109,1.747,111,0.839,119,0.516,126,1.191,127,1.324,131,0.971,140,0.403,141,0.212,145,0.878,170,2.67,187,2.342,200,1.074,201,1.511,202,1.511,203,1.074,204,1.895,205,1.074,206,1.074,207,0.716,208,1.074,209,0.716,210,1.074,211,0.716,212,1.074,213,0.716,214,1.074,215,1.074,216,1.263,217,1.074,218,0.793,219,1.074,220,0.716,221,0.716,222,0.578,223,1.074,224,0.716,225,0.971,226,1.074,227,1.074,228,0.024,229,0.024,236,2.212,247,1.666,248,1.666,257,2.67,329,3.11,347,1.479,356,1.074,359,1.511,381,1.324,466,2.67,468,2.342,480,1.479,533,2.67,549,2.212,591,2.212,593,1.666,600,1.899,612,1.899,619,1.666,673,1.899,700,2.342,720,1.191,739,1.899,766,2.212,767,5.179,768,4.369,769,3.777,770,4.369,771,4.369,772,3.777,773,3.777,774,2.687,775,2.687,776,2.687,777,2.687,778,3.777,779,4.111,780,2.687,781,1.899,782,2.687,783,2.687,784,3.11,785,5.179,786,3.777,787,3.777,788,3.11,789,4.739,790,3.777,791,4.994,792,3.777,793,3.777,794,3.777,795,3.777,796,3.777,797,2.687,798,3.777,799,2.687,800,2.687,801,2.687,802,2.687,803,2.687,804,2.687,805,2.687,806,2.687,807,2.687,808,2.687,809,2.687,810,2.687,811,2.687,812,2.687,813,3.777,814,4.369,815,2.687,816,2.687,817,2.687,818,2.687,819,2.687,820,2.687,821,2.687]],["title/classes/Player.html",[76,1.329,141,0.236]],["body/classes/Player.html",[3,0.592,4,0.516,9,0.516,25,0.516,26,0.731,38,0.672,49,0.965,51,0.592,52,0.04,53,0.755,54,0.638,55,0.592,76,2.158,103,1.851,109,2.396,111,0.758,133,3.577,135,2.789,140,0.592,141,0.311,222,1.271,228,0.031,229,0.031,409,4.133,515,3.248,674,2.446,822,3.248,823,4.814,824,4.009,825,4.869,826,3.945,827,3.945,828,3.945,829,3.248,830,3.945,831,3.248]],["title/injectables/PlayerService.html",[45,1.477,335,0.885]],["body/injectables/PlayerService.html",[3,0.342,4,0.298,9,0.298,25,0.298,26,0.503,27,2.452,29,1.747,34,1.096,38,0.388,41,2.412,42,2.787,45,1.652,46,3.138,47,3.277,48,3.615,49,0.919,51,0.659,52,0.04,53,0.64,54,0.527,55,0.659,59,1.566,60,1.6,75,1.446,76,2.705,78,2.559,79,2.079,80,2.814,93,0.955,94,0.955,111,0.998,119,0.437,123,1.122,124,1.254,125,1.254,126,1.009,127,1.122,129,3.22,131,0.823,133,1.412,135,1.61,140,0.342,141,0.179,145,1.6,149,1.769,150,1.769,151,1.769,173,2.761,174,2.761,175,2.761,176,2.761,185,1.486,221,1.17,222,0.721,228,0.022,229,0.022,231,1.122,320,2.306,335,0.99,337,1.122,344,2.417,346,3.035,347,3.01,350,3.035,351,2.371,352,1.875,354,3.138,355,1.254,356,1.958,358,2.695,359,1.592,381,1.961,409,3.309,427,1.875,441,3.672,463,4.277,465,2.761,474,1.946,720,1.009,823,2.761,832,1.875,833,3.981,834,4.391,835,4.391,836,4.391,837,3.354,838,3.354,839,3.354,840,3.354,841,2.277,842,2.277,843,2.277,844,3.354,845,2.277,846,3.354,847,2.277,848,3.354,849,2.277,850,3.354,851,2.277,852,2.277,853,1.875,854,2.277,855,2.277,856,2.277,857,2.277,858,2.277,859,2.277,860,2.277,861,2.277,862,2.277,863,2.277,864,2.277,865,2.277,866,2.277]],["title/classes/ScoreRow.html",[141,0.236,867,1.65]],["body/classes/ScoreRow.html",[3,0.576,4,0.502,9,0.502,25,0.502,26,0.718,29,1.78,38,0.654,49,0.958,51,0.576,52,0.039,53,0.75,54,0.633,55,0.783,103,1.95,109,2.248,134,4.052,140,0.576,141,0.303,222,1.251,228,0.031,229,0.031,474,2.491,674,2.381,824,3.943,829,3.162,831,3.162,867,2.636,868,3.162,869,5.814,870,5.814,871,4.789,872,3.841,873,3.841,874,3.841,875,3.841,876,3.841,877,3.841]],["title/injectables/ScoreService.html",[42,1.65,335,0.885]],["body/injectables/ScoreService.html",[3,0.515,4,0.449,9,0.449,25,0.449,26,0.669,27,2.194,29,1.697,34,1.456,38,0.584,42,2.453,43,2.467,49,0.893,51,0.669,52,0.04,53,0.583,54,0.502,55,0.669,59,1.462,60,1.456,63,2.453,75,1.316,91,2.831,93,0.823,94,0.823,103,1.819,111,0.95,119,0.659,131,1.24,140,0.515,141,0.27,145,1.456,149,1.611,150,1.611,151,1.611,228,0.029,229,0.029,231,1.69,320,1.69,335,1.316,337,1.69,344,2.453,346,2.763,347,3.064,350,2.763,354,3.367,355,1.888,356,1.782,358,2.453,359,1.372,381,1.69,692,2.824,720,1.52,878,2.824,879,5.431,880,5.24,881,4.456,882,4.456,883,3.43,884,4.583,885,4.456,886,3.43,887,3.669,888,4.456,889,4.456,890,3.43,891,3.43,892,3.43,893,3.43,894,3.43,895,3.43]],["title/components/SetScoreConfirmationComponent.html",[0,0.338,220,0.799]],["body/components/SetScoreConfirmationComponent.html",[0,0.543,1,0.866,2,1.555,3,0.488,4,0.425,5,1.3,6,1.3,7,1.3,8,1.3,9,0.425,14,1.441,16,1.3,17,2.339,18,2.339,20,1.721,23,1.721,25,0.425,26,0.646,29,1.271,38,0.554,49,0.822,51,0.488,52,0.04,53,0.631,54,0.543,55,0.488,93,0.78,94,1.156,109,1.721,111,0.826,119,0.624,123,1.602,124,1.79,125,1.79,140,0.488,141,0.256,187,3.521,200,1.3,201,1.721,202,1.721,203,1.3,204,2.052,205,1.3,206,1.3,207,0.866,208,1.3,209,0.866,210,1.3,211,0.866,212,1.3,213,0.866,214,1.3,215,1.3,216,0.866,217,1.3,218,0.96,219,1.3,220,1.367,221,1.513,222,1.291,223,1.3,224,0.866,225,1.175,226,1.3,227,1.3,228,0.028,229,0.028,308,3.628,867,2.939,896,4.225,897,2.677,898,4.303,899,4.822,900,4.303,901,5.132,902,4.303,903,3.251,904,5.338,905,4.303,906,3.251,907,4.303,908,3.251,909,4.303,910,4.303,911,4.303,912,4.303]],["title/injectables/SocketService.html",[43,1.329,335,0.885]],["body/injectables/SocketService.html",[3,0.214,4,0.187,9,0.187,25,0.187,26,0.35,29,0.872,34,0.762,38,0.243,43,1.033,49,0.947,51,0.689,52,0.041,53,0.723,54,0.532,55,0.689,59,1.717,60,1.451,62,2.808,63,2.601,64,2.411,65,3.34,66,2.808,68,2.808,71,2.663,72,1.919,76,2.435,79,2.115,83,3.832,84,2.411,91,1.988,93,0.342,94,0.709,109,2.133,111,0.655,119,0.274,126,0.632,140,0.214,141,0.112,145,1.796,146,3.307,147,3.605,149,1.973,150,1.973,151,1.973,166,2.999,167,2.999,221,0.909,222,0.955,228,0.015,229,0.015,231,0.703,280,1.009,320,2.513,335,0.688,337,0.703,344,3.116,355,0.785,356,1.364,358,1.878,359,1.837,365,3.967,379,2.546,381,1.852,382,3.49,389,1.175,411,1.919,438,2.432,446,1.648,454,2.808,455,3.322,468,1.445,469,1.648,474,1.666,636,3.095,696,1.919,698,2.808,700,1.445,720,0.632,739,2.411,853,1.175,867,2.221,887,3.505,913,1.175,914,2.955,915,2.331,916,3.411,917,3.411,918,3.411,919,3.411,920,3.411,921,3.411,922,3.411,923,3.411,924,3.411,925,3.411,926,3.411,927,3.411,928,3.411,929,3.411,930,2.331,931,2.331,932,2.331,933,2.331,934,2.331,935,2.331,936,1.427,937,2.331,938,2.331,939,1.427,940,2.331,941,1.427,942,2.955,943,2.955,944,2.331,945,1.427,946,2.331,947,1.427,948,3.411,949,2.331,950,1.427,951,1.427,952,2.955,953,1.427,954,4.44,955,1.427,956,2.331,957,1.427,958,2.331,959,1.427,960,2.331,961,1.427,962,2.331,963,2.808,964,1.427,965,1.427,966,1.427,967,1.427,968,1.427,969,2.331,970,1.427,971,2.331,972,2.331,973,1.427,974,3.411,975,2.955,976,2.331,977,2.331,978,1.427,979,2.331,980,2.331,981,2.331,982,2.331,983,1.427,984,2.331,985,2.331,986,2.331,987,1.427,988,2.331,989,1.919,990,2.331,991,1.427,992,1.427,993,1.427,994,1.427,995,1.427,996,1.427,997,1.427,998,3.411,999,1.427,1000,1.427,1001,1.427,1002,1.427,1003,1.427,1004,1.427,1005,1.427,1006,1.427,1007,1.427,1008,1.427,1009,1.427,1010,1.427,1011,1.427,1012,1.427,1013,1.427,1014,1.427,1015,1.427,1016,1.427,1017,1.427,1018,1.427,1019,1.427,1020,1.427,1021,1.427,1022,1.427,1023,1.427,1024,1.427,1025,1.427,1026,1.427,1027,1.427,1028,1.427,1029,1.427,1030,1.427,1031,1.427,1032,1.427,1033,1.427,1034,1.427,1035,1.427,1036,1.427]],["title/components/SoundComponent.html",[0,0.338,224,0.799]],["body/components/SoundComponent.html",[0,0.526,1,0.812,2,1.489,3,0.457,4,0.399,5,1.218,6,1.218,7,1.218,8,1.218,9,0.399,13,2.03,14,2.069,16,1.218,17,2.314,18,2.314,20,1.647,23,1.647,25,0.399,26,0.618,34,1.346,36,2.752,38,0.519,49,0.89,51,0.457,52,0.04,53,0.611,54,0.464,55,0.457,59,1.378,60,1.634,78,2.03,93,0.731,94,0.731,103,1.346,104,2.03,111,0.791,119,0.585,140,0.457,141,0.24,145,1.525,185,2.315,200,1.218,201,1.647,202,1.647,203,1.218,204,1.999,205,1.218,206,1.218,207,0.812,208,1.218,209,0.812,210,1.218,211,0.812,212,1.218,213,0.812,214,1.218,215,1.218,216,0.812,217,1.218,218,0.9,219,1.218,220,0.812,221,0.812,222,0.655,223,1.218,224,1.332,225,2.132,226,1.218,227,1.218,228,0.027,229,0.027,247,1.889,248,1.889,257,2.154,336,2.964,345,2.554,356,1.866,359,1.647,468,2.554,522,2.509,593,1.889,600,2.154,612,2.154,619,1.889,673,2.154,700,2.554,720,1.35,781,2.912,784,3.392,788,3.392,1037,2.509,1038,4.668,1039,4.12,1040,5,1041,5,1042,3.047,1043,4.12,1044,3.047,1045,4.12,1046,5,1047,3.047,1048,4.12,1049,3.047,1050,4.12,1051,3.047,1052,3.047,1053,3.047,1054,3.047,1055,3.047,1056,4.12,1057,3.047,1058,4.12,1059,3.047,1060,3.047]],["title/coverage.html",[1061,3.355]],["body/coverage.html",[0,0.656,1,0.933,9,0.458,10,2.883,11,2.475,12,2.883,41,1.725,42,1.928,43,1.552,45,1.725,52,0.04,54,0.394,75,1.034,76,1.552,133,2.171,134,3.192,141,0.416,207,0.933,209,0.933,211,0.933,213,0.933,216,0.933,218,1.034,220,0.933,222,0.971,224,0.933,228,0.029,229,0.029,230,2.883,235,1.928,246,2.171,268,2.8,276,3.192,287,2.883,292,2.475,308,2.475,310,2.475,318,3.099,332,2.475,335,1.614,336,1.928,338,2.883,364,2.883,379,1.725,402,2.883,480,3.278,519,2.475,667,3.718,675,2.883,685,2.883,760,2.883,761,2.883,766,2.883,822,2.883,832,2.883,867,1.928,868,2.883,878,2.883,896,2.883,897,2.883,913,2.883,1037,2.883,1061,2.883,1062,3.502,1063,3.502,1064,3.502,1065,2.883,1066,3.502,1067,2.883,1068,2.883,1069,5.598,1070,4.516,1071,5.282,1072,3.502,1073,3.502,1074,3.502,1075,3.502,1076,3.502,1077,3.502,1078,3.502,1079,3.502,1080,3.502,1081,3.502,1082,3.502,1083,3.502,1084,2.883,1085,3.502,1086,4.516,1087,3.502,1088,3.502,1089,3.502,1090,3.502,1091,3.502,1092,3.502,1093,4.516,1094,4.516,1095,4.516,1096,3.502,1097,3.502,1098,2.883,1099,2.883,1100,3.502,1101,3.502]],["title/dependencies.html",[261,2.232,1102,1.775]],["body/dependencies.html",[52,0.04,71,2.318,119,0.809,121,2.977,122,2.318,123,2.075,124,2.318,125,2.992,126,2.409,127,2.075,131,1.522,228,0.033,229,0.033,261,2.611,272,4.172,273,3.582,280,2.977,303,3.467,304,3.467,717,3.467,1103,4.212,1104,5.978,1105,4.212,1106,4.212,1107,4.212,1108,4.212,1109,4.212,1110,4.212,1111,4.212,1112,4.212,1113,4.212,1114,4.212,1115,4.212,1116,4.212,1117,4.212,1118,4.212,1119,4.212,1120,4.212]],["title/miscellaneous/functions.html",[1121,1.557,1122,2.965]],["body/miscellaneous/functions.html",[25,0.556,51,0.819,52,0.038,53,0.714,54,0.614,55,0.819,59,1.505,228,0.033,229,0.033,268,2.636,299,4.196,318,2.636,319,3.501,332,3.603,446,3.006,474,2.632,519,3.603,1065,3.501,1067,3.501,1068,4.196,1121,2.636,1122,3.501,1123,3.501,1124,4.253,1125,4.253,1126,4.253,1127,4.253,1128,5.458,1129,4.253,1130,4.253,1131,4.253,1132,5.097,1133,4.253,1134,4.253,1135,5.097,1136,4.253]],["title/index.html",[25,0.329,1137,2.512,1138,2.512]],["body/index.html",[0,0.594,4,0.515,13,1.94,21,3.242,52,0.031,53,0.515,75,1.163,86,3.242,123,2.88,228,0.031,229,0.031,235,2.168,238,3.242,267,2.441,533,2.784,723,2.784,762,3.242,779,3.242,781,3.73,884,4.748,963,4.004,989,3.242,1102,2.784,1139,4.864,1140,3.938,1141,5.277,1142,5.277,1143,3.938,1144,3.938,1145,5.663,1146,3.938,1147,3.938,1148,3.938,1149,3.938,1150,3.938,1151,3.938,1152,3.938,1153,3.938,1154,3.938,1155,5.277,1156,3.938,1157,5.512,1158,3.938,1159,3.938,1160,3.938,1161,3.938,1162,4.864,1163,4.864,1164,5.512,1165,3.938,1166,4.864,1167,4.864,1168,3.938,1169,3.938,1170,3.938,1171,3.938,1172,4.864,1173,3.938,1174,3.938,1175,3.938,1176,3.938,1177,3.938,1178,5.277,1179,2.784,1180,3.938]],["title/modules.html",[260,2.88]],["body/modules.html",[52,0.035,228,0.035,229,0.035,259,2.953,260,3.367,273,3.367,1181,4.763,1182,4.763,1183,4.763]],["title/overview.html",[1179,2.88]],["body/overview.html",[1,1.43,2,1.479,52,0.039,87,2.537,207,1.57,209,1.43,211,1.43,213,1.43,216,1.43,218,1.585,220,1.43,224,1.43,228,0.032,229,0.032,258,3.37,259,3.841,261,3.087,262,3.37,263,3.37,264,3.37,265,4.1,266,2.537,267,2.537,337,2.017,480,2.253,574,2.893,656,2.893,674,2.537,1179,2.893,1184,4.093]],["title/properties.html",[26,0.54,1102,1.775]],["body/properties.html",[26,0.718,52,0.037,228,0.035,229,0.035,235,2.634,1185,4.784]],["title/routes.html",[295,2.88]],["body/routes.html",[52,0.035,228,0.035,229,0.035,295,3.404]],["title/miscellaneous/variables.html",[143,2.545,1121,1.557]],["body/miscellaneous/variables.html",[25,0.549,52,0.04,54,0.634,93,1.351,94,1.351,104,2.491,109,1.678,143,2.966,185,1.859,228,0.033,229,0.033,235,2.783,268,2.601,276,3.981,279,3.454,310,3.573,311,3.454,312,3.454,313,3.454,314,3.454,315,3.454,316,3.454,1084,3.454,1098,3.454,1099,3.454,1121,2.601,1123,3.454,1186,4.195,1187,4.195,1188,4.195,1189,5.055,1190,5.055,1191,5.055,1192,4.195,1193,4.195,1194,4.195,1195,4.195]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":480,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":1185,"title":{},"body":{"properties.html":{}}}],["0.075",{"_index":648,"title":{},"body":{"components/DicesComponent.html":{}}}],["0.11.4",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":646,"title":{},"body":{"components/DicesComponent.html":{}}}],["0.15s",{"_index":621,"title":{},"body":{"components/DicesComponent.html":{}}}],["0.25",{"_index":759,"title":{},"body":{"components/GameComponent.html":{}}}],["0.25rem",{"_index":653,"title":{},"body":{"components/DicesComponent.html":{}}}],["0.375rem",{"_index":641,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["0.3s",{"_index":632,"title":{},"body":{"components/DicesComponent.html":{}}}],["0.4rem",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["0.5s",{"_index":631,"title":{},"body":{"components/DicesComponent.html":{}}}],["0.5vh",{"_index":639,"title":{},"body":{"components/DicesComponent.html":{}}}],["0.5vw",{"_index":637,"title":{},"body":{"components/DicesComponent.html":{}}}],["0.65",{"_index":651,"title":{},"body":{"components/DicesComponent.html":{}}}],["0.7rem",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["0.8rem",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1092,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1085,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":166,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"injectables/SocketService.html":{}}}],["02",{"_index":147,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"injectables/SocketService.html":{}}}],["1",{"_index":87,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"overview.html":{}}}],["1.5rem",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/LanguageComponent.html":{},"components/SoundComponent.html":{}}}],["1.5vh",{"_index":605,"title":{},"body":{"components/DicesComponent.html":{}}}],["1.5vw",{"_index":604,"title":{},"body":{"components/DicesComponent.html":{}}}],["1.9.1",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"coverage.html":{}}}],["110",{"_index":630,"title":{},"body":{"components/DicesComponent.html":{}}}],["11:13:24",{"_index":586,"title":{},"body":{"components/DicesComponent.html":{}}}],["11:14:14",{"_index":799,"title":{},"body":{"components/LanguageComponent.html":{}}}],["11:17:21",{"_index":1051,"title":{},"body":{"components/SoundComponent.html":{}}}],["11:18:29",{"_index":1055,"title":{},"body":{"components/SoundComponent.html":{}}}],["11:18:44",{"_index":1059,"title":{},"body":{"components/SoundComponent.html":{}}}],["11:37:00",{"_index":168,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["12:00:49",{"_index":526,"title":{},"body":{"components/DicesComponent.html":{}}}],["12:10:41",{"_index":560,"title":{},"body":{"components/DicesComponent.html":{}}}],["12:11:07",{"_index":563,"title":{},"body":{"components/DicesComponent.html":{}}}],["12:19:43",{"_index":576,"title":{},"body":{"components/DicesComponent.html":{}}}],["12:30:25",{"_index":584,"title":{},"body":{"components/DicesComponent.html":{}}}],["12:41:07",{"_index":148,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["13.1.0",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["13:20:08",{"_index":732,"title":{},"body":{"components/GameComponent.html":{}}}],["13:42:37",{"_index":749,"title":{},"body":{"components/GameComponent.html":{}}}],["14.0.0",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["14.2.0",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["14.2.6",{"_index":1143,"title":{},"body":{"index.html":{}}}],["140",{"_index":595,"title":{},"body":{"components/DicesComponent.html":{}}}],["14:58:21",{"_index":994,"title":{},"body":{"injectables/SocketService.html":{}}}],["14:59:33",{"_index":996,"title":{},"body":{"injectables/SocketService.html":{}}}],["15",{"_index":1090,"title":{},"body":{"coverage.html":{}}}],["15:02:41",{"_index":999,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:06:09",{"_index":1001,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:09:54",{"_index":1009,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:10:34",{"_index":1011,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:11:04",{"_index":1013,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:12:19",{"_index":1017,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:12:54",{"_index":1019,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:13:40",{"_index":1021,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:14:34",{"_index":1023,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:26:17",{"_index":585,"title":{},"body":{"components/DicesComponent.html":{}}}],["15:28:15",{"_index":992,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:30:21",{"_index":1015,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:31:13",{"_index":1025,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:31:58",{"_index":1027,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:32:26",{"_index":1029,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:32:37",{"_index":1031,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:32:47",{"_index":1033,"title":{},"body":{"injectables/SocketService.html":{}}}],["15:35:04",{"_index":162,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["19",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["1:24:44",{"_index":357,"title":{},"body":{"injectables/ClientService.html":{}}}],["1:26:08",{"_index":362,"title":{},"body":{"injectables/ClientService.html":{}}}],["1:27:58",{"_index":390,"title":{},"body":{"injectables/DiceService.html":{}}}],["1:29:02",{"_index":392,"title":{},"body":{"injectables/DiceService.html":{}}}],["1px",{"_index":599,"title":{},"body":{"components/DicesComponent.html":{}}}],["1rem",{"_index":628,"title":{},"body":{"components/DicesComponent.html":{}}}],["1vw",{"_index":627,"title":{},"body":{"components/DicesComponent.html":{}}}],["2",{"_index":570,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["2,30",{"_index":101,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["2.10.2",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":1091,"title":{},"body":{"coverage.html":{}}}],["2/15/2023",{"_index":356,"title":{},"body":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["2/5",{"_index":1093,"title":{},"body":{"coverage.html":{}}}],["2023",{"_index":146,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"injectables/SocketService.html":{}}}],["21",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["212529",{"_index":640,"title":{},"body":{"components/DicesComponent.html":{}}}],["22",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["22/25",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":645,"title":{},"body":{"components/DicesComponent.html":{}}}],["2:14:02",{"_index":394,"title":{},"body":{"injectables/DiceService.html":{}}}],["2:15:02",{"_index":396,"title":{},"body":{"injectables/DiceService.html":{}}}],["2:16:36",{"_index":398,"title":{},"body":{"injectables/DiceService.html":{}}}],["2:17:12",{"_index":400,"title":{},"body":{"injectables/DiceService.html":{}}}],["2:18:07",{"_index":857,"title":{},"body":{"injectables/PlayerService.html":{}}}],["2:18:26",{"_index":858,"title":{},"body":{"injectables/PlayerService.html":{}}}],["2:19:09",{"_index":859,"title":{},"body":{"injectables/PlayerService.html":{}}}],["2:20:01",{"_index":861,"title":{},"body":{"injectables/PlayerService.html":{}}}],["2:20:32",{"_index":863,"title":{},"body":{"injectables/PlayerService.html":{}}}],["2:46:40",{"_index":865,"title":{},"body":{"injectables/PlayerService.html":{}}}],["2:47:30",{"_index":891,"title":{},"body":{"injectables/ScoreService.html":{}}}],["2:48:26",{"_index":894,"title":{},"body":{"injectables/ScoreService.html":{}}}],["2:49:19",{"_index":1035,"title":{},"body":{"injectables/SocketService.html":{}}}],["2:50:09",{"_index":1003,"title":{},"body":{"injectables/SocketService.html":{}}}],["2:50:45",{"_index":1005,"title":{},"body":{"injectables/SocketService.html":{}}}],["2:53:07",{"_index":1007,"title":{},"body":{"injectables/SocketService.html":{}}}],["2vw",{"_index":672,"title":{},"body":{"components/DicesComponent.html":{}}}],["3",{"_index":572,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["3/12",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":525,"title":{},"body":{"components/DicesComponent.html":{}}}],["31",{"_index":167,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"injectables/SocketService.html":{}}}],["4",{"_index":574,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{},"overview.html":{}}}],["4.3.1",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":667,"title":{},"body":{"components/DicesComponent.html":{},"coverage.html":{}}}],["40rem",{"_index":670,"title":{},"body":{"components/DicesComponent.html":{}}}],["42",{"_index":1076,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":656,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{},"overview.html":{}}}],["5.2.2",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":1094,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":579,"title":{},"body":{"components/DicesComponent.html":{}}}],["6/11",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["6/31",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["7.0.0",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["7/31",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["7/33",{"_index":1089,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["88",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1184,"title":{},"body":{"overview.html":{}}}],["90",{"_index":634,"title":{},"body":{"components/DicesComponent.html":{}}}],["9åäöåäö\\\\s",{"_index":100,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["activemodal",{"_index":901,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["actual_component",{"_index":227,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["add",{"_index":21,"title":{},"body":{"components/AddPlayersComponent.html":{},"index.html":{}}}],["addplayer.fourplayer",{"_index":195,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["addplayer.joingame",{"_index":197,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["addplayer.letsplay",{"_index":186,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["addplayer.maxplayers",{"_index":189,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["addplayer.name",{"_index":188,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["addplayer.serveroff",{"_index":199,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["addplayer.serveron",{"_index":198,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["addplayer.single",{"_index":190,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["addplayer.threeplayer",{"_index":193,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["addplayer.twoplayer",{"_index":191,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["addplayers",{"_index":19,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["addplayers'},{'name",{"_index":206,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["addplayerscomponent",{"_index":1,"title":{"components/AddPlayersComponent.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["afterviewchecked",{"_index":112,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["afterviewinit",{"_index":113,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["align",{"_index":609,"title":{},"body":{"components/DicesComponent.html":{}}}],["amount",{"_index":697,"title":{},"body":{"components/GameComponent.html":{}}}],["amtofplayers",{"_index":688,"title":{},"body":{"components/GameComponent.html":{}}}],["amtofplayers}}/{{maxplayers",{"_index":752,"title":{},"body":{"components/GameComponent.html":{}}}],["angular",{"_index":1141,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":717,"title":{},"body":{"components/GameComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":119,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":121,"title":{},"body":{"components/AddPlayersComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":122,"title":{},"body":{"components/AddPlayersComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":430,"title":{},"body":{"components/DicesComponent.html":{}}}],["animatediceroll",{"_index":422,"title":{},"body":{"components/DicesComponent.html":{}}}],["animates",{"_index":1129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["animation",{"_index":1134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["animations",{"_index":523,"title":{},"body":{"components/DicesComponent.html":{}}}],["animationspeed",{"_index":1128,"title":{},"body":{"miscellaneous/functions.html":{}}}],["animationstate",{"_index":406,"title":{},"body":{"components/DicesComponent.html":{}}}],["animationtriggermetadata",{"_index":1135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["anything",{"_index":439,"title":{},"body":{"components/DicesComponent.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["app.component",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":207,"title":{"components/AppComponent.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":1150,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":259,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["app{{version",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["array",{"_index":382,"title":{},"body":{"injectables/DiceService.html":{},"components/DicesComponent.html":{},"injectables/SocketService.html":{}}}],["arrays",{"_index":454,"title":{},"body":{"components/DicesComponent.html":{},"injectables/SocketService.html":{}}}],["artifacts",{"_index":1158,"title":{},"body":{"index.html":{}}}],["asks",{"_index":81,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["assets/i18n",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/images/sweden.png",{"_index":792,"title":{},"body":{"components/LanguageComponent.html":{}}}],["assets/images/united",{"_index":795,"title":{},"body":{"components/LanguageComponent.html":{}}}],["async",{"_index":424,"title":{},"body":{"components/DicesComponent.html":{}}}],["audio",{"_index":1046,"title":{},"body":{"components/SoundComponent.html":{}}}],["audio('https://zylion.se/rollingdice.mp3",{"_index":493,"title":{},"body":{"components/DicesComponent.html":{}}}],["author",{"_index":149,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{}}}],["auto",{"_index":660,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["automatically",{"_index":1151,"title":{},"body":{"index.html":{}}}],["available",{"_index":438,"title":{},"body":{"components/DicesComponent.html":{},"injectables/SocketService.html":{}}}],["availabledice",{"_index":942,"title":{},"body":{"injectables/SocketService.html":{}}}],["await",{"_index":531,"title":{},"body":{"components/DicesComponent.html":{}}}],["back",{"_index":724,"title":{},"body":{"components/GameComponent.html":{},"components/LandingPageComponent.html":{}}}],["backdrop",{"_index":758,"title":{},"body":{"components/GameComponent.html":{}}}],["backend",{"_index":63,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{}}}],["background",{"_index":619,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"components/SoundComponent.html":{}}}],["base",{"_index":976,"title":{},"body":{"injectables/SocketService.html":{}}}],["based",{"_index":1131,"title":{},"body":{"miscellaneous/functions.html":{}}}],["behavior",{"_index":360,"title":{},"body":{"injectables/ClientService.html":{}}}],["behaviorsubject",{"_index":352,"title":{},"body":{"injectables/ClientService.html":{},"injectables/PlayerService.html":{}}}],["behaviorsubject(0",{"_index":850,"title":{},"body":{"injectables/PlayerService.html":{}}}],["behaviorsubject(true",{"_index":353,"title":{},"body":{"injectables/ClientService.html":{}}}],["bg",{"_index":596,"title":{},"body":{"components/DicesComponent.html":{}}}],["block",{"_index":607,"title":{},"body":{"components/DicesComponent.html":{}}}],["board",{"_index":135,"title":{},"body":{"components/AddPlayersComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{}}}],["board.component",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["board.component.ts",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["board.ts",{"_index":1087,"title":{},"body":{"coverage.html":{}}}],["board/score",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["bonusapplied",{"_index":869,"title":{},"body":{"classes/ScoreRow.html":{}}}],["boolean",{"_index":103,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"classes/Player.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SoundComponent.html":{}}}],["bootstrap",{"_index":125,"title":{},"body":{"components/AddPlayersComponent.html":{},"modules/AppModule.html":{},"injectables/PlayerService.html":{},"components/SetScoreConfirmationComponent.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":124,"title":{},"body":{"components/AddPlayersComponent.html":{},"modules/AppModule.html":{},"injectables/PlayerService.html":{},"components/SetScoreConfirmationComponent.html":{},"dependencies.html":{}}}],["border",{"_index":593,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"components/SoundComponent.html":{}}}],["both",{"_index":451,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["bottom",{"_index":754,"title":{},"body":{"components/GameComponent.html":{}}}],["box",{"_index":623,"title":{},"body":{"components/DicesComponent.html":{}}}],["brand",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["break",{"_index":568,"title":{},"body":{"components/DicesComponent.html":{}}}],["browse",{"_index":1183,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":590,"title":{},"body":{"components/DicesComponent.html":{}}}],["btn",{"_index":589,"title":{},"body":{"components/DicesComponent.html":{}}}],["btn.disabled",{"_index":663,"title":{},"body":{"components/DicesComponent.html":{}}}],["btn:disabled",{"_index":662,"title":{},"body":{"components/DicesComponent.html":{}}}],["build",{"_index":1157,"title":{},"body":{"index.html":{}}}],["button",{"_index":445,"title":{},"body":{"components/DicesComponent.html":{}}}],["calc(2.3rem",{"_index":603,"title":{},"body":{"components/DicesComponent.html":{}}}],["calc(2.5rem",{"_index":671,"title":{},"body":{"components/DicesComponent.html":{}}}],["calc(2rem",{"_index":626,"title":{},"body":{"components/DicesComponent.html":{}}}],["capabilities",{"_index":1176,"title":{},"body":{"index.html":{}}}],["case",{"_index":565,"title":{},"body":{"components/DicesComponent.html":{}}}],["center",{"_index":610,"title":{},"body":{"components/DicesComponent.html":{}}}],["change",{"_index":533,"title":{},"body":{"components/DicesComponent.html":{},"components/LanguageComponent.html":{},"index.html":{}}}],["changes",{"_index":776,"title":{},"body":{"components/LanguageComponent.html":{}}}],["changesitelanguage",{"_index":772,"title":{},"body":{"components/LanguageComponent.html":{}}}],["changesitelanguage(localecode",{"_index":774,"title":{},"body":{"components/LanguageComponent.html":{}}}],["check",{"_index":989,"title":{},"body":{"injectables/SocketService.html":{},"index.html":{}}}],["choice",{"_index":1171,"title":{},"body":{"index.html":{}}}],["chose",{"_index":85,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["chosen",{"_index":78,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"components/SoundComponent.html":{}}}],["chosenmaxplayer",{"_index":407,"title":{},"body":{"components/DicesComponent.html":{}}}],["chosenmaxplayers",{"_index":833,"title":{},"body":{"injectables/PlayerService.html":{}}}],["christopher",{"_index":150,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{}}}],["class",{"_index":141,"title":{"classes/Die.html":{},"classes/Player.html":{},"classes/ScoreRow.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"coverage.html":{}}}],["classes",{"_index":674,"title":{},"body":{"classes/Die.html":{},"classes/Player.html":{},"classes/ScoreRow.html":{},"overview.html":{}}}],["cli",{"_index":1142,"title":{},"body":{"index.html":{}}}],["client",{"_index":463,"title":{},"body":{"components/DicesComponent.html":{},"injectables/PlayerService.html":{}}}],["clientid",{"_index":28,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["clientplayer",{"_index":80,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"injectables/PlayerService.html":{}}}],["clients",{"_index":70,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["clientservice",{"_index":336,"title":{"injectables/ClientService.html":{}},"body":{"injectables/ClientService.html":{},"components/DicesComponent.html":{},"components/SoundComponent.html":{},"coverage.html":{}}}],["cluster_appmodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":779,"title":{},"body":{"components/LanguageComponent.html":{},"index.html":{}}}],["color",{"_index":591,"title":{},"body":{"components/DicesComponent.html":{},"components/LanguageComponent.html":{}}}],["command",{"_index":1172,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":205,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{},"overview.html":{}}}],["components/add",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["components/dices/dices.component",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["components/language/language.component",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["components/modals/set",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["components/score",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["components/sound/sound.component",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["config",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmation",{"_index":898,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["confirmation'},{'name",{"_index":223,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["confirmation.component",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmation.component.css",{"_index":899,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["confirmation.component.html",{"_index":900,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["confirmation.component.ts",{"_index":897,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{},"coverage.html":{}}}],["confirmation.component.ts:10",{"_index":905,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["confirmation.component.ts:12",{"_index":906,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["confirmation/set",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"components/SetScoreConfirmationComponent.html":{},"coverage.html":{}}}],["connected",{"_index":699,"title":{},"body":{"components/GameComponent.html":{}}}],["const",{"_index":170,"title":{},"body":{"components/AddPlayersComponent.html":{},"modules/AppModule.html":{},"components/LanguageComponent.html":{}}}],["constructor",{"_index":38,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["constructor(activemodal",{"_index":903,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["constructor(clientservice",{"_index":1042,"title":{},"body":{"components/SoundComponent.html":{}}}],["constructor(diceservice",{"_index":427,"title":{},"body":{"components/DicesComponent.html":{},"injectables/PlayerService.html":{}}}],["constructor(die",{"_index":678,"title":{},"body":{"classes/Die.html":{}}}],["constructor(name",{"_index":824,"title":{},"body":{"classes/Player.html":{},"classes/ScoreRow.html":{}}}],["constructor(private",{"_index":720,"title":{},"body":{"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["constructor(public",{"_index":908,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["constructor(router",{"_index":39,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/LandingPageComponent.html":{}}}],["constructor(socket",{"_index":936,"title":{},"body":{"injectables/SocketService.html":{}}}],["constructor(socketservice",{"_index":692,"title":{},"body":{"components/GameComponent.html":{},"injectables/ScoreService.html":{}}}],["constructor(translate",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/LanguageComponent.html":{}}}],["control",{"_index":447,"title":{},"body":{"components/DicesComponent.html":{}}}],["controls",{"_index":440,"title":{},"body":{"components/DicesComponent.html":{}}}],["counter",{"_index":443,"title":{},"body":{"components/DicesComponent.html":{}}}],["coverage",{"_index":1061,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":74,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["current",{"_index":441,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{},"injectables/PlayerService.html":{}}}],["currenthits",{"_index":408,"title":{},"body":{"components/DicesComponent.html":{}}}],["currently",{"_index":946,"title":{},"body":{"injectables/SocketService.html":{}}}],["currentplayer",{"_index":409,"title":{},"body":{"components/DicesComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{}}}],["cursor",{"_index":615,"title":{},"body":{"components/DicesComponent.html":{}}}],["custom",{"_index":602,"title":{},"body":{"components/DicesComponent.html":{}}}],["date",{"_index":145,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["decides",{"_index":476,"title":{},"body":{"components/DicesComponent.html":{}}}],["declarations",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["decoration",{"_index":611,"title":{},"body":{"components/DicesComponent.html":{}}}],["default",{"_index":93,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["defined",{"_index":49,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["dependencies",{"_index":261,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":744,"title":{},"body":{"components/GameComponent.html":{}}}],["deps",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":381,"title":{},"body":{"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{}}}],["determine",{"_index":780,"title":{},"body":{"components/LanguageComponent.html":{}}}],["dev",{"_index":1147,"title":{},"body":{"index.html":{}}}],["development",{"_index":1144,"title":{},"body":{"index.html":{}}}],["dice",{"_index":365,"title":{},"body":{"injectables/DiceService.html":{},"components/DicesComponent.html":{},"injectables/SocketService.html":{}}}],["dice.service",{"_index":855,"title":{},"body":{"injectables/PlayerService.html":{}}}],["dice:active",{"_index":661,"title":{},"body":{"components/DicesComponent.html":{}}}],["dice:disabled",{"_index":665,"title":{},"body":{"components/DicesComponent.html":{}}}],["dice[index].die",{"_index":552,"title":{},"body":{"components/DicesComponent.html":{}}}],["dice[index].selected",{"_index":554,"title":{},"body":{"components/DicesComponent.html":{}}}],["dice[index].side",{"_index":556,"title":{},"body":{"components/DicesComponent.html":{}}}],["diceaudio",{"_index":410,"title":{},"body":{"components/DicesComponent.html":{}}}],["dicehit",{"_index":411,"title":{},"body":{"components/DicesComponent.html":{},"injectables/SocketService.html":{}}}],["dicehit(dice",{"_index":938,"title":{},"body":{"injectables/SocketService.html":{}}}],["dicemovement",{"_index":412,"title":{},"body":{"components/DicesComponent.html":{}}}],["dicemoving",{"_index":915,"title":{},"body":{"injectables/SocketService.html":{}}}],["dicemoving(incdice",{"_index":940,"title":{},"body":{"injectables/SocketService.html":{}}}],["dices",{"_index":403,"title":{},"body":{"components/DicesComponent.html":{}}}],["dices'},{'name",{"_index":210,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["dices.component.css",{"_index":404,"title":{},"body":{"components/DicesComponent.html":{}}}],["dices.component.html",{"_index":405,"title":{},"body":{"components/DicesComponent.html":{}}}],["dicescomponent",{"_index":209,"title":{"components/DicesComponent.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["diceservice",{"_index":41,"title":{"injectables/DiceService.html":{}},"body":{"components/AddPlayersComponent.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["die",{"_index":379,"title":{"classes/Die.html":{}},"body":{"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"injectables/SocketService.html":{},"coverage.html":{}}}],["die(1",{"_index":501,"title":{},"body":{"components/DicesComponent.html":{}}}],["die(2",{"_index":505,"title":{},"body":{"components/DicesComponent.html":{}}}],["die(3",{"_index":503,"title":{},"body":{"components/DicesComponent.html":{}}}],["die(4",{"_index":499,"title":{},"body":{"components/DicesComponent.html":{}}}],["die(5",{"_index":497,"title":{},"body":{"components/DicesComponent.html":{}}}],["die.die",{"_index":551,"title":{},"body":{"components/DicesComponent.html":{}}}],["die.selected",{"_index":553,"title":{},"body":{"components/DicesComponent.html":{}}}],["die.side",{"_index":555,"title":{},"body":{"components/DicesComponent.html":{}}}],["diefive",{"_index":413,"title":{},"body":{"components/DicesComponent.html":{}}}],["diefour",{"_index":414,"title":{},"body":{"components/DicesComponent.html":{}}}],["dieone",{"_index":415,"title":{},"body":{"components/DicesComponent.html":{}}}],["diethree",{"_index":416,"title":{},"body":{"components/DicesComponent.html":{}}}],["dietwo",{"_index":417,"title":{},"body":{"components/DicesComponent.html":{}}}],["directive",{"_index":203,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["directives",{"_index":226,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1156,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1161,"title":{},"body":{"index.html":{}}}],["directs",{"_index":90,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["disabled",{"_index":649,"title":{},"body":{"components/DicesComponent.html":{}}}],["disableplaybutton",{"_index":418,"title":{},"body":{"components/DicesComponent.html":{}}}],["disables",{"_index":457,"title":{},"body":{"components/DicesComponent.html":{}}}],["disconnected",{"_index":954,"title":{},"body":{"injectables/SocketService.html":{}}}],["disconnectedinqueue",{"_index":689,"title":{},"body":{"components/GameComponent.html":{}}}],["disconnects",{"_index":745,"title":{},"body":{"components/GameComponent.html":{}}}],["display",{"_index":657,"title":{},"body":{"components/DicesComponent.html":{}}}],["display:inline",{"_index":606,"title":{},"body":{"components/DicesComponent.html":{}}}],["dist",{"_index":1160,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":980,"title":{},"body":{"injectables/SocketService.html":{}}}],["distributed",{"_index":351,"title":{},"body":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"injectables/PlayerService.html":{}}}],["distributes",{"_index":344,"title":{},"body":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{}}}],["docheck",{"_index":114,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["documentation",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["done",{"_index":889,"title":{},"body":{"injectables/ScoreService.html":{}}}],["dynamic",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1169,"title":{},"body":{"index.html":{}}}],["each",{"_index":437,"title":{},"body":{"components/DicesComponent.html":{}}}],["ease",{"_index":622,"title":{},"body":{"components/DicesComponent.html":{}}}],["element",{"_index":202,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["emit",{"_index":64,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/GameComponent.html":{},"injectables/SocketService.html":{}}}],["emits",{"_index":887,"title":{},"body":{"injectables/ScoreService.html":{},"injectables/SocketService.html":{}}}],["emitting",{"_index":948,"title":{},"body":{"injectables/SocketService.html":{}}}],["en",{"_index":793,"title":{},"body":{"components/LanguageComponent.html":{}}}],["enables",{"_index":1045,"title":{},"body":{"components/SoundComponent.html":{}}}],["enables/disables",{"_index":444,"title":{},"body":{"components/DicesComponent.html":{}}}],["enablesound",{"_index":1040,"title":{},"body":{"components/SoundComponent.html":{}}}],["end",{"_index":884,"title":{},"body":{"injectables/ScoreService.html":{},"index.html":{}}}],["ended",{"_index":979,"title":{},"body":{"injectables/SocketService.html":{}}}],["endofgame",{"_index":879,"title":{},"body":{"injectables/ScoreService.html":{}}}],["environment",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.socketurl",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["event.navigationtrigger",{"_index":729,"title":{},"body":{"components/GameComponent.html":{},"components/LandingPageComponent.html":{}}}],["events:none",{"_index":753,"title":{},"body":{"components/GameComponent.html":{}}}],["execute",{"_index":1166,"title":{},"body":{"index.html":{}}}],["export",{"_index":140,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["false",{"_index":104,"title":{},"body":{"components/AddPlayersComponent.html":{},"modules/AppModule.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/SoundComponent.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1133,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fetches",{"_index":784,"title":{},"body":{"components/LanguageComponent.html":{},"components/SoundComponent.html":{}}}],["fieldset:disabled",{"_index":664,"title":{},"body":{"components/DicesComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"coverage.html":{}}}],["files",{"_index":1153,"title":{},"body":{"index.html":{}}}],["first",{"_index":1174,"title":{},"body":{"index.html":{}}}],["firstvaluefrom",{"_index":128,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{}}}],["firstvaluefrom(this.playerservice.getchosenmaxplayers",{"_index":532,"title":{},"body":{"components/DicesComponent.html":{}}}],["fixed",{"_index":757,"title":{},"body":{"components/GameComponent.html":{}}}],["flag",{"_index":791,"title":{},"body":{"components/LanguageComponent.html":{}}}],["focus",{"_index":652,"title":{},"body":{"components/DicesComponent.html":{}}}],["font",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/LanguageComponent.html":{},"components/SoundComponent.html":{}}}],["for(let",{"_index":807,"title":{},"body":{"components/LanguageComponent.html":{}}}],["form",{"_index":89,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["formbuilder",{"_index":44,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["formsmodule",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["forth",{"_index":725,"title":{},"body":{"components/GameComponent.html":{},"components/LandingPageComponent.html":{}}}],["four",{"_index":956,"title":{},"body":{"injectables/SocketService.html":{}}}],["full",{"_index":696,"title":{},"body":{"components/GameComponent.html":{},"injectables/SocketService.html":{}}}],["fullgame",{"_index":690,"title":{},"body":{"components/GameComponent.html":{}}}],["function",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"components/DicesComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":1122,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1177,"title":{},"body":{"index.html":{}}}],["game",{"_index":91,"title":{},"body":{"components/AddPlayersComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{}}}],["game'},{'name",{"_index":212,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["game.component.css",{"_index":686,"title":{},"body":{"components/GameComponent.html":{}}}],["game.component.html",{"_index":687,"title":{},"body":{"components/GameComponent.html":{}}}],["gamecomponent",{"_index":211,"title":{"components/GameComponent.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["generate",{"_index":1155,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1140,"title":{},"body":{"index.html":{}}}],["generates",{"_index":435,"title":{},"body":{"components/DicesComponent.html":{}}}],["getamtofplayersinroom",{"_index":916,"title":{},"body":{"injectables/SocketService.html":{}}}],["getchosenmaxplayers",{"_index":834,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getclientplayer",{"_index":835,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getcurrentplayer",{"_index":836,"title":{},"body":{"injectables/PlayerService.html":{}}}],["getcurrentplayerresult",{"_index":917,"title":{},"body":{"injectables/SocketService.html":{}}}],["getdice",{"_index":367,"title":{},"body":{"injectables/DiceService.html":{}}}],["getdicehit",{"_index":918,"title":{},"body":{"injectables/SocketService.html":{}}}],["getdicemovement",{"_index":919,"title":{},"body":{"injectables/SocketService.html":{}}}],["getdisconnectedplayer",{"_index":920,"title":{},"body":{"injectables/SocketService.html":{}}}],["getdisconnectedplayerinfourqueue",{"_index":921,"title":{},"body":{"injectables/SocketService.html":{}}}],["getdisconnectedplayerinthreequeue",{"_index":922,"title":{},"body":{"injectables/SocketService.html":{}}}],["getdisconnectedplayerintwoqueue",{"_index":923,"title":{},"body":{"injectables/SocketService.html":{}}}],["getendofgame",{"_index":880,"title":{},"body":{"injectables/ScoreService.html":{}}}],["getnewturn",{"_index":368,"title":{},"body":{"injectables/DiceService.html":{}}}],["getonlinecheck",{"_index":924,"title":{},"body":{"injectables/SocketService.html":{}}}],["getplayers",{"_index":925,"title":{},"body":{"injectables/SocketService.html":{}}}],["getqueuenumbers",{"_index":926,"title":{},"body":{"injectables/SocketService.html":{}}}],["getreset",{"_index":369,"title":{},"body":{"injectables/DiceService.html":{}}}],["getroom",{"_index":691,"title":{},"body":{"components/GameComponent.html":{}}}],["getroomfull",{"_index":927,"title":{},"body":{"injectables/SocketService.html":{}}}],["getroomname",{"_index":928,"title":{},"body":{"injectables/SocketService.html":{}}}],["getsound",{"_index":340,"title":{},"body":{"injectables/ClientService.html":{}}}],["getting",{"_index":1137,"title":{"index.html":{}},"body":{}}],["getuserid",{"_index":929,"title":{},"body":{"injectables/SocketService.html":{}}}],["global/version",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["go",{"_index":723,"title":{},"body":{"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"index.html":{}}}],["height",{"_index":625,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["height:var",{"_index":815,"title":{},"body":{"components/LanguageComponent.html":{}}}],["heightwidth",{"_index":814,"title":{},"body":{"components/LanguageComponent.html":{}}}],["help",{"_index":1178,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":819,"title":{},"body":{"components/LanguageComponent.html":{}}}],["hit",{"_index":455,"title":{},"body":{"components/DicesComponent.html":{},"injectables/SocketService.html":{}}}],["hitdices",{"_index":423,"title":{},"body":{"components/DicesComponent.html":{}}}],["hits",{"_index":442,"title":{},"body":{"components/DicesComponent.html":{}}}],["hostlistener",{"_index":718,"title":{},"body":{"components/GameComponent.html":{}}}],["hover",{"_index":642,"title":{},"body":{"components/DicesComponent.html":{}}}],["html",{"_index":201,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["http",{"_index":1126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http://localhost:3000",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1149,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["httploaderfactory",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["icon",{"_index":673,"title":{},"body":{"components/DicesComponent.html":{},"components/LanguageComponent.html":{},"components/SoundComponent.html":{}}}],["icon::after",{"_index":817,"title":{},"body":{"components/LanguageComponent.html":{}}}],["icon:hover",{"_index":820,"title":{},"body":{"components/LanguageComponent.html":{}}}],["icons",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":72,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/SocketService.html":{}}}],["identifier",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["if(bool",{"_index":537,"title":{},"body":{"components/DicesComponent.html":{}}}],["if(event",{"_index":727,"title":{},"body":{"components/GameComponent.html":{},"components/LandingPageComponent.html":{}}}],["if(maxplayers",{"_index":180,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["if(status",{"_index":736,"title":{},"body":{"components/GameComponent.html":{}}}],["if(this.maxplayers",{"_index":734,"title":{},"body":{"components/GameComponent.html":{}}}],["if(this.nameform.valid",{"_index":169,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"components/SoundComponent.html":{},"index.html":{}}}],["import",{"_index":111,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["imports",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["incdice",{"_index":944,"title":{},"body":{"injectables/SocketService.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["injectable",{"_index":335,"title":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{}},"body":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{},"coverage.html":{}}}],["injectables",{"_index":337,"title":{},"body":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{},"overview.html":{}}}],["inline",{"_index":658,"title":{},"body":{"components/DicesComponent.html":{}}}],["input",{"_index":907,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["inputs",{"_index":902,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["inset",{"_index":643,"title":{},"body":{"components/DicesComponent.html":{}}}],["instanceof",{"_index":728,"title":{},"body":{"components/GameComponent.html":{},"components/LandingPageComponent.html":{}}}],["io",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"injectables/SocketService.html":{},"dependencies.html":{}}}],["isdiceavailable",{"_index":419,"title":{},"body":{"components/DicesComponent.html":{}}}],["join",{"_index":82,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["joinroom",{"_index":930,"title":{},"body":{"injectables/SocketService.html":{}}}],["joinroom(player",{"_index":969,"title":{},"body":{"injectables/SocketService.html":{}}}],["json",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["karma",{"_index":1168,"title":{},"body":{"index.html":{}}}],["label",{"_index":789,"title":{},"body":{"components/LanguageComponent.html":{}}}],["landing",{"_index":214,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["landingpagecomponent",{"_index":213,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["langchange",{"_index":770,"title":{},"body":{"components/LanguageComponent.html":{}}}],["langchangeevent",{"_index":798,"title":{},"body":{"components/LanguageComponent.html":{}}}],["language",{"_index":767,"title":{},"body":{"components/LanguageComponent.html":{}}}],["language'},{'name",{"_index":217,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["language.code",{"_index":808,"title":{},"body":{"components/LanguageComponent.html":{}}}],["language.component.css",{"_index":768,"title":{},"body":{"components/LanguageComponent.html":{}}}],["language.component.html",{"_index":769,"title":{},"body":{"components/LanguageComponent.html":{}}}],["language.label",{"_index":813,"title":{},"body":{"components/LanguageComponent.html":{}}}],["languagecomponent",{"_index":216,"title":{"components/LanguageComponent.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["languagelist",{"_index":771,"title":{},"body":{"components/LanguageComponent.html":{}}}],["languages",{"_index":805,"title":{},"body":{"components/LanguageComponent.html":{}}}],["last",{"_index":788,"title":{},"body":{"components/LanguageComponent.html":{},"components/SoundComponent.html":{}}}],["left",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["legend",{"_index":200,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["lightgray",{"_index":668,"title":{},"body":{"components/DicesComponent.html":{}}}],["limit",{"_index":702,"title":{},"body":{"components/GameComponent.html":{}}}],["loader",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["loading",{"_index":750,"title":{},"body":{"components/GameComponent.html":{}}}],["locale",{"_index":785,"title":{},"body":{"components/LanguageComponent.html":{}}}],["localecode",{"_index":778,"title":{},"body":{"components/LanguageComponent.html":{}}}],["localecode)?.label.tostring",{"_index":809,"title":{},"body":{"components/LanguageComponent.html":{}}}],["localestorage",{"_index":1050,"title":{},"body":{"components/SoundComponent.html":{}}}],["locally",{"_index":985,"title":{},"body":{"injectables/SocketService.html":{}}}],["localstorage",{"_index":786,"title":{},"body":{"components/LanguageComponent.html":{}}}],["localstorage.getitem('locale",{"_index":800,"title":{},"body":{"components/LanguageComponent.html":{}}}],["localstorage.getitem('sound",{"_index":1052,"title":{},"body":{"components/SoundComponent.html":{}}}],["localstorage.setitem('locale",{"_index":812,"title":{},"body":{"components/LanguageComponent.html":{}}}],["localstorage.setitem('sound",{"_index":1058,"title":{},"body":{"components/SoundComponent.html":{}}}],["makes",{"_index":448,"title":{},"body":{"components/DicesComponent.html":{}}}],["margin",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["matching",{"_index":229,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":578,"title":{},"body":{"components/DicesComponent.html":{}}}],["max",{"_index":129,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"injectables/PlayerService.html":{}}}],["maxplayer",{"_index":701,"title":{},"body":{"components/GameComponent.html":{}}}],["maxplayers",{"_index":79,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/GameComponent.html":{},"injectables/PlayerService.html":{},"injectables/SocketService.html":{}}}],["message",{"_index":981,"title":{},"body":{"injectables/SocketService.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["method",{"_index":984,"title":{},"body":{"injectables/SocketService.html":{}}}],["methods",{"_index":34,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["middle",{"_index":614,"title":{},"body":{"components/DicesComponent.html":{}}}],["misc",{"_index":142,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{}}}],["miscellaneous",{"_index":1121,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":47,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/PlayerService.html":{}}}],["modal.confirm",{"_index":909,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["modal.no",{"_index":911,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["modal.setscore",{"_index":910,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["modal.yes",{"_index":912,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["models/die",{"_index":389,"title":{},"body":{"injectables/DiceService.html":{},"injectables/SocketService.html":{}}}],["models/player",{"_index":853,"title":{},"body":{"injectables/PlayerService.html":{},"injectables/SocketService.html":{}}}],["models/score",{"_index":854,"title":{},"body":{"injectables/PlayerService.html":{}}}],["module",{"_index":258,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":260,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":86,"title":{},"body":{"components/AddPlayersComponent.html":{},"index.html":{}}}],["moved",{"_index":449,"title":{},"body":{"components/DicesComponent.html":{}}}],["movedicestosaved",{"_index":478,"title":{},"body":{"components/DicesComponent.html":{}}}],["movement",{"_index":557,"title":{},"body":{"components/DicesComponent.html":{}}}],["multiple",{"_index":467,"title":{},"body":{"components/DicesComponent.html":{}}}],["muted",{"_index":434,"title":{},"body":{"components/DicesComponent.html":{}}}],["mutes",{"_index":1048,"title":{},"body":{"components/SoundComponent.html":{}}}],["mutesound",{"_index":1041,"title":{},"body":{"components/SoundComponent.html":{}}}],["name",{"_index":53,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nameform",{"_index":30,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["navigate",{"_index":1148,"title":{},"body":{"index.html":{}}}],["navigationstart",{"_index":719,"title":{},"body":{"components/GameComponent.html":{},"components/LandingPageComponent.html":{}}}],["navindex",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":1173,"title":{},"body":{"index.html":{}}}],["new",{"_index":75,"title":{},"body":{"components/AddPlayersComponent.html":{},"modules/AppModule.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"coverage.html":{},"index.html":{}}}],["newturn",{"_index":366,"title":{},"body":{"injectables/DiceService.html":{},"components/DicesComponent.html":{}}}],["nextplayer",{"_index":931,"title":{},"body":{"injectables/SocketService.html":{}}}],["nextplayer(scorerowname",{"_index":972,"title":{},"body":{"injectables/SocketService.html":{}}}],["ng",{"_index":123,"title":{},"body":{"components/AddPlayersComponent.html":{},"modules/AppModule.html":{},"injectables/PlayerService.html":{},"components/SetScoreConfirmationComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngbactivemodal",{"_index":904,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{}}}],["ngbmodal",{"_index":48,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/PlayerService.html":{}}}],["ngbmodule",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":35,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{}}}],["ngoninit",{"_index":36,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"components/SoundComponent.html":{}}}],["ngx",{"_index":126,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/SocketService.html":{},"dependencies.html":{}}}],["none",{"_index":612,"title":{},"body":{"components/DicesComponent.html":{},"components/LanguageComponent.html":{},"components/SoundComponent.html":{}}}],["null",{"_index":549,"title":{},"body":{"components/DicesComponent.html":{},"components/LanguageComponent.html":{}}}],["number",{"_index":474,"title":{},"body":{"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/SocketService.html":{},"miscellaneous/functions.html":{}}}],["number(amtofplayers",{"_index":738,"title":{},"body":{"components/GameComponent.html":{}}}],["number(this.nameform.controls['maxplayers'].value",{"_index":177,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["numbers",{"_index":66,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/SocketService.html":{}}}],["obeservables",{"_index":58,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["object",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(translation",{"_index":806,"title":{},"body":{"components/LanguageComponent.html":{}}}],["observable",{"_index":347,"title":{},"body":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{}}}],["observables",{"_index":461,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["onchanges",{"_index":115,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["ondestroy",{"_index":15,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["online",{"_index":68,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/SocketService.html":{}}}],["onlinecheck",{"_index":31,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["opacity",{"_index":650,"title":{},"body":{"components/DicesComponent.html":{}}}],["optional",{"_index":55,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":468,"title":{},"body":{"components/DicesComponent.html":{},"components/LanguageComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["out",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"components/DicesComponent.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1179,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1102,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":635,"title":{},"body":{"components/DicesComponent.html":{}}}],["page",{"_index":762,"title":{},"body":{"components/LandingPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":215,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["page.component",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.css",{"_index":763,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.html",{"_index":764,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":761,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:9",{"_index":765,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/landing",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["pages/game/game.component",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/landing",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["param",{"_index":359,"title":{},"body":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["parameters",{"_index":51,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":482,"title":{},"body":{"components/DicesComponent.html":{}}}],["path",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["place",{"_index":974,"title":{},"body":{"injectables/SocketService.html":{}}}],["platform",{"_index":1170,"title":{},"body":{"index.html":{}}}],["platformlocation",{"_index":716,"title":{},"body":{"components/GameComponent.html":{}}}],["play",{"_index":433,"title":{},"body":{"components/DicesComponent.html":{}}}],["play:active",{"_index":633,"title":{},"body":{"components/DicesComponent.html":{}}}],["play:disabled",{"_index":666,"title":{},"body":{"components/DicesComponent.html":{}}}],["play:hover",{"_index":629,"title":{},"body":{"components/DicesComponent.html":{}}}],["player",{"_index":76,"title":{"classes/Player.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"injectables/SocketService.html":{},"coverage.html":{}}}],["player(name",{"_index":172,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["players",{"_index":698,"title":{},"body":{"components/GameComponent.html":{},"injectables/SocketService.html":{}}}],["players.component",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["players.component.css",{"_index":22,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["players.component.html",{"_index":24,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["players.component.ts",{"_index":12,"title":{},"body":{"components/AddPlayersComponent.html":{},"coverage.html":{}}}],["players.component.ts:21",{"_index":110,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["players.component.ts:22",{"_index":105,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["players.component.ts:23",{"_index":107,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["players.component.ts:26",{"_index":102,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["players.component.ts:32",{"_index":106,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["players.component.ts:33",{"_index":108,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["players.component.ts:34",{"_index":50,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["players.component.ts:55",{"_index":61,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["players.component.ts:76",{"_index":56,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["players.component.ts:95",{"_index":73,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["players/add",{"_index":11,"title":{},"body":{"components/AddPlayersComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["playerservice",{"_index":45,"title":{"injectables/PlayerService.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["pm",{"_index":358,"title":{},"body":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{}}}],["pointer",{"_index":616,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["popperjs/core",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["popstate",{"_index":730,"title":{},"body":{"components/GameComponent.html":{},"components/LandingPageComponent.html":{}}}],["position",{"_index":756,"title":{},"body":{"components/GameComponent.html":{}}}],["possibility",{"_index":722,"title":{},"body":{"components/GameComponent.html":{},"components/LandingPageComponent.html":{}}}],["prevent",{"_index":721,"title":{},"body":{"components/GameComponent.html":{},"components/LandingPageComponent.html":{}}}],["private",{"_index":27,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/ClientService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{}}}],["production",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production.up.railway.app",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1139,"title":{},"body":{"index.html":{}}}],["promise",{"_index":471,"title":{},"body":{"components/DicesComponent.html":{}}}],["properties",{"_index":26,"title":{"properties.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"properties.html":{}}}],["provide",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":355,"title":{},"body":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{}}}],["providers",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":29,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{}}}],["put",{"_index":949,"title":{},"body":{"injectables/SocketService.html":{}}}],["queue",{"_index":65,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/GameComponent.html":{},"injectables/SocketService.html":{}}}],["queuenumbers",{"_index":32,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["radius",{"_index":601,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["random",{"_index":988,"title":{},"body":{"injectables/SocketService.html":{}}}],["reactiveformsmodule",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["recieve",{"_index":469,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{},"injectables/SocketService.html":{}}}],["recieves",{"_index":1008,"title":{},"body":{"injectables/SocketService.html":{}}}],["reconnection",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":1180,"title":{},"body":{"index.html":{}}}],["reineborn",{"_index":151,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{}}}],["reload",{"_index":1152,"title":{},"body":{"index.html":{}}}],["reset",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"overview.html":{}}}],["resetdice",{"_index":420,"title":{},"body":{"components/DicesComponent.html":{}}}],["resetdices",{"_index":425,"title":{},"body":{"components/DicesComponent.html":{}}}],["resets",{"_index":88,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{}}}],["resetted",{"_index":459,"title":{},"body":{"components/DicesComponent.html":{}}}],["results",{"_index":228,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":787,"title":{},"body":{"components/LanguageComponent.html":{}}}],["retrieves",{"_index":67,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["return",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{}}}],["returns",{"_index":59,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"miscellaneous/functions.html":{}}}],["rgb",{"_index":655,"title":{},"body":{"components/DicesComponent.html":{}}}],["rgb(20,20,20",{"_index":821,"title":{},"body":{"components/LanguageComponent.html":{}}}],["rgb(240",{"_index":594,"title":{},"body":{"components/DicesComponent.html":{}}}],["rgb(240,140,0",{"_index":597,"title":{},"body":{"components/DicesComponent.html":{}}}],["rgba(0",{"_index":647,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["rgba(255",{"_index":644,"title":{},"body":{"components/DicesComponent.html":{}}}],["rgba(var",{"_index":654,"title":{},"body":{"components/DicesComponent.html":{}}}],["right",{"_index":755,"title":{},"body":{"components/GameComponent.html":{}}}],["rolling",{"_index":431,"title":{},"body":{"components/DicesComponent.html":{}}}],["room",{"_index":83,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/GameComponent.html":{},"injectables/SocketService.html":{}}}],["roomname",{"_index":914,"title":{},"body":{"injectables/SocketService.html":{}}}],["root",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{}}}],["root'},{'name",{"_index":208,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["rotateanimation",{"_index":519,"title":{},"body":{"components/DicesComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rotateanimation(4",{"_index":524,"title":{},"body":{"components/DicesComponent.html":{}}}],["rotateanimation(spins",{"_index":1127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rotation",{"_index":1130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["router",{"_index":40,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{}}}],["router.events.foreach((event",{"_index":726,"title":{},"body":{"components/GameComponent.html":{},"components/LandingPageComponent.html":{}}}],["router.navigate",{"_index":731,"title":{},"body":{"components/GameComponent.html":{},"components/LandingPageComponent.html":{}}}],["routermodule",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":295,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"routes.html":{}}}],["row.ts",{"_index":868,"title":{},"body":{"classes/ScoreRow.html":{},"coverage.html":{}}}],["row.ts:2",{"_index":873,"title":{},"body":{"classes/ScoreRow.html":{}}}],["row.ts:3",{"_index":874,"title":{},"body":{"classes/ScoreRow.html":{}}}],["row.ts:4",{"_index":875,"title":{},"body":{"classes/ScoreRow.html":{}}}],["row.ts:5",{"_index":871,"title":{},"body":{"classes/ScoreRow.html":{}}}],["run",{"_index":1145,"title":{},"body":{"index.html":{}}}],["running",{"_index":1162,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":131,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"dependencies.html":{}}}],["same",{"_index":741,"title":{},"body":{"components/GameComponent.html":{}}}],["saved",{"_index":952,"title":{},"body":{"injectables/SocketService.html":{}}}],["saveddice",{"_index":943,"title":{},"body":{"injectables/SocketService.html":{}}}],["scaffolding",{"_index":1154,"title":{},"body":{"index.html":{}}}],["score",{"_index":222,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"coverage.html":{}}}],["score.service",{"_index":856,"title":{},"body":{"injectables/PlayerService.html":{}}}],["scoreboard",{"_index":133,"title":{},"body":{"components/AddPlayersComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["scoreboard'},{'name",{"_index":219,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["scoreboard(this.diceservice",{"_index":173,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/PlayerService.html":{}}}],["scoreboardcomponent",{"_index":218,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scorerow",{"_index":867,"title":{"classes/ScoreRow.html":{}},"body":{"classes/ScoreRow.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"coverage.html":{}}}],["scorerowname",{"_index":975,"title":{},"body":{"injectables/SocketService.html":{}}}],["scoreservice",{"_index":42,"title":{"injectables/ScoreService.html":{}},"body":{"components/AddPlayersComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"coverage.html":{}}}],["see",{"_index":888,"title":{},"body":{"injectables/ScoreService.html":{}}}],["select",{"_index":618,"title":{},"body":{"components/DicesComponent.html":{}}}],["selectable",{"_index":870,"title":{},"body":{"classes/ScoreRow.html":{}}}],["selectdie",{"_index":426,"title":{},"body":{"components/DicesComponent.html":{}}}],["selectdie(die",{"_index":473,"title":{},"body":{"components/DicesComponent.html":{}}}],["selected",{"_index":676,"title":{},"body":{"classes/Die.html":{}}}],["selectedlanguage",{"_index":810,"title":{},"body":{"components/LanguageComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["send",{"_index":477,"title":{},"body":{"components/DicesComponent.html":{}}}],["sends",{"_index":450,"title":{},"body":{"components/DicesComponent.html":{}}}],["serve",{"_index":1146,"title":{},"body":{"index.html":{}}}],["server",{"_index":963,"title":{},"body":{"injectables/SocketService.html":{},"index.html":{}}}],["service",{"_index":452,"title":{},"body":{"components/DicesComponent.html":{}}}],["set",{"_index":221,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["setchosenmaxplayers",{"_index":837,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setchosenmaxplayers(maxplayers",{"_index":844,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setclientplayer",{"_index":838,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setclientplayer(player",{"_index":846,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setcurrentplayer",{"_index":839,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setcurrentplayer(player",{"_index":848,"title":{},"body":{"injectables/PlayerService.html":{}}}],["setdice",{"_index":370,"title":{},"body":{"injectables/DiceService.html":{}}}],["setdice(dice",{"_index":378,"title":{},"body":{"injectables/DiceService.html":{}}}],["setendofgame",{"_index":881,"title":{},"body":{"injectables/ScoreService.html":{}}}],["setendofgame(endofgame",{"_index":885,"title":{},"body":{"injectables/ScoreService.html":{}}}],["setgameend",{"_index":932,"title":{},"body":{"injectables/SocketService.html":{}}}],["setgameend(room",{"_index":977,"title":{},"body":{"injectables/SocketService.html":{}}}],["setname",{"_index":37,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["setnewturn",{"_index":371,"title":{},"body":{"injectables/DiceService.html":{}}}],["setnewturn(reset",{"_index":383,"title":{},"body":{"injectables/DiceService.html":{}}}],["setreset",{"_index":372,"title":{},"body":{"injectables/DiceService.html":{}}}],["setreset(reset",{"_index":385,"title":{},"body":{"injectables/DiceService.html":{}}}],["setroomname",{"_index":933,"title":{},"body":{"injectables/SocketService.html":{}}}],["setroomname(room",{"_index":982,"title":{},"body":{"injectables/SocketService.html":{}}}],["sets",{"_index":77,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["setscoreconfirmationcomponent",{"_index":220,"title":{"components/SetScoreConfirmationComponent.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setsound",{"_index":341,"title":{},"body":{"injectables/ClientService.html":{}}}],["setsound(sound",{"_index":348,"title":{},"body":{"injectables/ClientService.html":{}}}],["settimeout",{"_index":587,"title":{},"body":{"components/DicesComponent.html":{}}}],["setting",{"_index":350,"title":{},"body":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{}}}],["shadow",{"_index":624,"title":{},"body":{"components/DicesComponent.html":{}}}],["sid",{"_index":33,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["side",{"_index":677,"title":{},"body":{"classes/Die.html":{}}}],["simplechanges",{"_index":116,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["singleplayer",{"_index":458,"title":{},"body":{"components/DicesComponent.html":{}}}],["site",{"_index":777,"title":{},"body":{"components/LanguageComponent.html":{}}}],["size",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/LanguageComponent.html":{},"components/SoundComponent.html":{}}}],["skiplocationchange",{"_index":184,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{}}}],["socket",{"_index":71,"title":{},"body":{"components/AddPlayersComponent.html":{},"modules/AppModule.html":{},"components/GameComponent.html":{},"injectables/SocketService.html":{},"dependencies.html":{}}}],["socket.service",{"_index":890,"title":{},"body":{"injectables/ScoreService.html":{}}}],["socketid",{"_index":823,"title":{},"body":{"classes/Player.html":{},"injectables/PlayerService.html":{}}}],["socketioconfig",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["socketiomodule",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["socketiomodule.forroot(config",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["socketservice",{"_index":43,"title":{"injectables/SocketService.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{},"coverage.html":{}}}],["socketurl",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solid",{"_index":659,"title":{},"body":{"components/DicesComponent.html":{}}}],["sound",{"_index":225,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["sound.component.css",{"_index":1038,"title":{},"body":{"components/SoundComponent.html":{}}}],["sound.component.html",{"_index":1039,"title":{},"body":{"components/SoundComponent.html":{}}}],["soundchange",{"_index":421,"title":{},"body":{"components/DicesComponent.html":{}}}],["soundcomponent",{"_index":224,"title":{"components/SoundComponent.html":{}},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["soundstate",{"_index":339,"title":{},"body":{"injectables/ClientService.html":{},"components/DicesComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"index.html":{}}}],["spins",{"_index":1132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.module.ts",{"_index":1123,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rotate.animation.ts",{"_index":1124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../version.ts",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../yourturn.animation.ts",{"_index":1125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/animations/rotate.animation",{"_index":520,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/animations/rotate.animation.ts",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/animations/yourturn.animation.ts",{"_index":1067,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/add",{"_index":10,"title":{},"body":{"components/AddPlayersComponent.html":{},"coverage.html":{}}}],["src/app/components/dices/dices.component.ts",{"_index":402,"title":{},"body":{"components/DicesComponent.html":{},"coverage.html":{}}}],["src/app/components/dices/dices.component.ts:119",{"_index":460,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:133",{"_index":475,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:168",{"_index":432,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:190",{"_index":453,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:20",{"_index":502,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:205",{"_index":472,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:21",{"_index":506,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:22",{"_index":504,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:222",{"_index":429,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:23",{"_index":500,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:24",{"_index":498,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:25",{"_index":492,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:26",{"_index":484,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:27",{"_index":508,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:30",{"_index":483,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:31",{"_index":485,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:32",{"_index":481,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:34",{"_index":507,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:37",{"_index":512,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:38",{"_index":479,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:39",{"_index":494,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:42",{"_index":509,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:43",{"_index":510,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:44",{"_index":486,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:45",{"_index":495,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:46",{"_index":496,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:47",{"_index":511,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:48",{"_index":428,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/dices/dices.component.ts:63",{"_index":462,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/components/language/language.component.ts",{"_index":766,"title":{},"body":{"components/LanguageComponent.html":{},"coverage.html":{}}}],["src/app/components/language/language.component.ts:11",{"_index":797,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/components/language/language.component.ts:16",{"_index":773,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/components/language/language.component.ts:27",{"_index":783,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/components/language/language.component.ts:46",{"_index":782,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/components/language/language.component.ts:57",{"_index":775,"title":{},"body":{"components/LanguageComponent.html":{}}}],["src/app/components/modals/set",{"_index":896,"title":{},"body":{"components/SetScoreConfirmationComponent.html":{},"coverage.html":{}}}],["src/app/components/score",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["src/app/components/sound/sound.component.ts",{"_index":1037,"title":{},"body":{"components/SoundComponent.html":{},"coverage.html":{}}}],["src/app/components/sound/sound.component.ts:10",{"_index":1043,"title":{},"body":{"components/SoundComponent.html":{}}}],["src/app/components/sound/sound.component.ts:19",{"_index":1049,"title":{},"body":{"components/SoundComponent.html":{}}}],["src/app/components/sound/sound.component.ts:28",{"_index":1047,"title":{},"body":{"components/SoundComponent.html":{}}}],["src/app/components/sound/sound.component.ts:39",{"_index":1044,"title":{},"body":{"components/SoundComponent.html":{}}}],["src/app/global/version.ts",{"_index":1084,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/die",{"_index":521,"title":{},"body":{"components/DicesComponent.html":{}}}],["src/app/models/die.ts",{"_index":675,"title":{},"body":{"classes/Die.html":{},"coverage.html":{}}}],["src/app/models/die.ts:2",{"_index":680,"title":{},"body":{"classes/Die.html":{}}}],["src/app/models/die.ts:3",{"_index":681,"title":{},"body":{"classes/Die.html":{}}}],["src/app/models/die.ts:4",{"_index":679,"title":{},"body":{"classes/Die.html":{}}}],["src/app/models/player",{"_index":132,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{}}}],["src/app/models/player.ts",{"_index":822,"title":{},"body":{"classes/Player.html":{},"coverage.html":{}}}],["src/app/models/player.ts:4",{"_index":827,"title":{},"body":{"classes/Player.html":{}}}],["src/app/models/player.ts:5",{"_index":828,"title":{},"body":{"classes/Player.html":{}}}],["src/app/models/player.ts:6",{"_index":826,"title":{},"body":{"classes/Player.html":{}}}],["src/app/models/player.ts:7",{"_index":825,"title":{},"body":{"classes/Player.html":{}}}],["src/app/models/score",{"_index":134,"title":{},"body":{"components/AddPlayersComponent.html":{},"classes/ScoreRow.html":{},"coverage.html":{}}}],["src/app/pages/game/game.component.ts",{"_index":685,"title":{},"body":{"components/GameComponent.html":{},"coverage.html":{}}}],["src/app/pages/game/game.component.ts:14",{"_index":706,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:15",{"_index":703,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:16",{"_index":709,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:19",{"_index":707,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:20",{"_index":708,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:21",{"_index":704,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:22",{"_index":705,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:23",{"_index":710,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:24",{"_index":693,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:47",{"_index":695,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:98",{"_index":694,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/landing",{"_index":760,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/services/client.service",{"_index":522,"title":{},"body":{"components/DicesComponent.html":{},"components/SoundComponent.html":{}}}],["src/app/services/client.service.ts",{"_index":338,"title":{},"body":{"injectables/ClientService.html":{},"coverage.html":{}}}],["src/app/services/client.service.ts:20",{"_index":349,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/app/services/client.service.ts:32",{"_index":343,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/app/services/client.service.ts:9",{"_index":342,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/app/services/dice.service",{"_index":136,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{}}}],["src/app/services/dice.service.ts",{"_index":364,"title":{},"body":{"injectables/DiceService.html":{},"coverage.html":{}}}],["src/app/services/dice.service.ts:10",{"_index":388,"title":{},"body":{"injectables/DiceService.html":{}}}],["src/app/services/dice.service.ts:11",{"_index":373,"title":{},"body":{"injectables/DiceService.html":{}}}],["src/app/services/dice.service.ts:24",{"_index":380,"title":{},"body":{"injectables/DiceService.html":{}}}],["src/app/services/dice.service.ts:36",{"_index":374,"title":{},"body":{"injectables/DiceService.html":{}}}],["src/app/services/dice.service.ts:49",{"_index":386,"title":{},"body":{"injectables/DiceService.html":{}}}],["src/app/services/dice.service.ts:61",{"_index":377,"title":{},"body":{"injectables/DiceService.html":{}}}],["src/app/services/dice.service.ts:74",{"_index":384,"title":{},"body":{"injectables/DiceService.html":{}}}],["src/app/services/dice.service.ts:87",{"_index":375,"title":{},"body":{"injectables/DiceService.html":{}}}],["src/app/services/dice.service.ts:9",{"_index":387,"title":{},"body":{"injectables/DiceService.html":{}}}],["src/app/services/player.service",{"_index":137,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["src/app/services/player.service.ts",{"_index":832,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["src/app/services/player.service.ts:14",{"_index":851,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:15",{"_index":852,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:16",{"_index":840,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:29",{"_index":847,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:41",{"_index":842,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:53",{"_index":849,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:66",{"_index":843,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:79",{"_index":845,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/player.service.ts:92",{"_index":841,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/services/score.service",{"_index":138,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["src/app/services/score.service.ts",{"_index":878,"title":{},"body":{"injectables/ScoreService.html":{},"coverage.html":{}}}],["src/app/services/score.service.ts:22",{"_index":886,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/score.service.ts:36",{"_index":883,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/score.service.ts:9",{"_index":882,"title":{},"body":{"injectables/ScoreService.html":{}}}],["src/app/services/socket.service",{"_index":139,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["src/app/services/socket.service.ts",{"_index":913,"title":{},"body":{"injectables/SocketService.html":{},"coverage.html":{}}}],["src/app/services/socket.service.ts:10",{"_index":937,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:105",{"_index":983,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:118",{"_index":967,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:129",{"_index":966,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:140",{"_index":964,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:150",{"_index":945,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:161",{"_index":950,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:173",{"_index":951,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:184",{"_index":947,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:195",{"_index":968,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:206",{"_index":953,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:217",{"_index":959,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:228",{"_index":957,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:23",{"_index":987,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:239",{"_index":955,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:250",{"_index":961,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:262",{"_index":965,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:34",{"_index":970,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:45",{"_index":939,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:57",{"_index":941,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:70",{"_index":973,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:81",{"_index":978,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:93",{"_index":991,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/environments/environment",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":1098,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1099,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1138,"title":{"index.html":{}},"body":{}}],["state",{"_index":345,"title":{},"body":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/SoundComponent.html":{}}}],["statements",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["states.png",{"_index":796,"title":{},"body":{"components/LanguageComponent.html":{}}}],["status",{"_index":69,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["stored",{"_index":1159,"title":{},"body":{"index.html":{}}}],["stores",{"_index":464,"title":{},"body":{"components/DicesComponent.html":{}}}],["string",{"_index":109,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"classes/ScoreRow.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"miscellaneous/variables.html":{}}}],["stuff",{"_index":740,"title":{},"body":{"components/GameComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["subject",{"_index":354,"title":{},"body":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{}}}],["subscribers",{"_index":346,"title":{},"body":{"injectables/ClientService.html":{},"injectables/DiceService.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{}}}],["subscribes",{"_index":466,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{}}}],["subscription",{"_index":92,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{}}}],["subscription.unsubscribe",{"_index":562,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["subscriptions",{"_index":144,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["support",{"_index":1181,"title":{},"body":{"modules.html":{}}}],["sv",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"components/LanguageComponent.html":{}}}],["svg",{"_index":1182,"title":{},"body":{"modules.html":{}}}],["switch(die",{"_index":564,"title":{},"body":{"components/DicesComponent.html":{}}}],["table",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":130,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/GameComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["templateref",{"_index":117,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["test",{"_index":1165,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1175,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1164,"title":{},"body":{"index.html":{}}}],["text",{"_index":608,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.amtofplayers",{"_index":711,"title":{},"body":{"components/GameComponent.html":{}}}],["this.animatediceroll",{"_index":547,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.animationstate",{"_index":588,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.bonusapplied",{"_index":877,"title":{},"body":{"classes/ScoreRow.html":{}}}],["this.changesitelanguage(locale",{"_index":801,"title":{},"body":{"components/LanguageComponent.html":{}}}],["this.chosenmaxplayer",{"_index":530,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.chosenmaxplayers.asobservable",{"_index":866,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.chosenmaxplayers.next(maxplayers",{"_index":864,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.clientid",{"_index":158,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.clientid$.unsubscribe",{"_index":164,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.clientplayer",{"_index":465,"title":{},"body":{"components/DicesComponent.html":{},"injectables/PlayerService.html":{}}}],["this.clientplayer.socketid",{"_index":544,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.clientservice.getsound().subscribe(sound",{"_index":534,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.clientservice.setsound(false",{"_index":1057,"title":{},"body":{"components/SoundComponent.html":{}}}],["this.clientservice.setsound(true",{"_index":1060,"title":{},"body":{"components/SoundComponent.html":{}}}],["this.currenthits",{"_index":580,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.currentplayer",{"_index":515,"title":{},"body":{"components/DicesComponent.html":{},"classes/Player.html":{}}}],["this.currentplayer.asobservable",{"_index":862,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayer.next(player",{"_index":860,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayer.socketid",{"_index":543,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.dice",{"_index":559,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.dice.asobservable",{"_index":393,"title":{},"body":{"injectables/DiceService.html":{}}}],["this.dice.map((die",{"_index":550,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.dice.map(die",{"_index":577,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.dice.next(dice",{"_index":391,"title":{},"body":{"injectables/DiceService.html":{}}}],["this.diceaudio.load",{"_index":527,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.diceaudio.play",{"_index":548,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.dicehit",{"_index":516,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.dicemovement",{"_index":517,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.diceservice.getnewturn().subscribe(bool",{"_index":536,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.diceservice.getreset().subscribe(bool",{"_index":539,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.diceservice.setdice(this.dice",{"_index":582,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.diceservice.setnewturn(false",{"_index":538,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.diceservice.setreset(false",{"_index":541,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.die",{"_index":682,"title":{},"body":{"classes/Die.html":{}}}],["this.diefive",{"_index":491,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.diefive.selected",{"_index":575,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.diefour",{"_index":490,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.diefour.selected",{"_index":573,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.dieone",{"_index":487,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.dieone.selected",{"_index":566,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.diethree",{"_index":489,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.diethree.selected",{"_index":571,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.dietwo",{"_index":488,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.dietwo.selected",{"_index":569,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.disableplaybutton",{"_index":545,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.disconnectedinqueue",{"_index":712,"title":{},"body":{"components/GameComponent.html":{}}}],["this.enablesound",{"_index":1053,"title":{},"body":{"components/SoundComponent.html":{}}}],["this.endofgame.asobservable",{"_index":895,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.endofgame.next(endofgame",{"_index":893,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.formbuilder.group",{"_index":95,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.fullgame",{"_index":713,"title":{},"body":{"components/GameComponent.html":{}}}],["this.getroom",{"_index":714,"title":{},"body":{"components/GameComponent.html":{}}}],["this.isdiceavailable",{"_index":581,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.langchange",{"_index":802,"title":{},"body":{"components/LanguageComponent.html":{}}}],["this.maxplayers",{"_index":715,"title":{},"body":{"components/GameComponent.html":{}}}],["this.modal",{"_index":176,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/PlayerService.html":{}}}],["this.mutesound",{"_index":1054,"title":{},"body":{"components/SoundComponent.html":{}}}],["this.name",{"_index":829,"title":{},"body":{"classes/Player.html":{},"classes/ScoreRow.html":{}}}],["this.nameform.controls['name'].value",{"_index":171,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.nameform.reset",{"_index":182,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.newturn",{"_index":513,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.newturn.asobservable",{"_index":401,"title":{},"body":{"injectables/DiceService.html":{}}}],["this.newturn.next(reset",{"_index":399,"title":{},"body":{"injectables/DiceService.html":{}}}],["this.onlinecheck",{"_index":156,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.onlinecheck$.unsubscribe",{"_index":163,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.playerservice.getchosenmaxplayers().subscribe(players",{"_index":733,"title":{},"body":{"components/GameComponent.html":{}}}],["this.playerservice.getclientplayer",{"_index":528,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.playerservice.getcurrentplayer().subscribe(player",{"_index":542,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.playerservice.setchosenmaxplayers(maxplayers",{"_index":178,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.playerservice.setclientplayer(clientplayer",{"_index":179,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.queuenumbers",{"_index":153,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.queuenumbers$.unsubscribe",{"_index":165,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.queuenumbers.qfour}}/4",{"_index":196,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.queuenumbers.qthree}}/3",{"_index":194,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.queuenumbers.qtwo}}/2",{"_index":192,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.reset.asobservable",{"_index":397,"title":{},"body":{"injectables/DiceService.html":{}}}],["this.reset.next(reset",{"_index":395,"title":{},"body":{"injectables/DiceService.html":{}}}],["this.resetdice",{"_index":514,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.resetdices",{"_index":540,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.roomname",{"_index":998,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.router.navigate(['game",{"_index":183,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.score",{"_index":831,"title":{},"body":{"classes/Player.html":{},"classes/ScoreRow.html":{}}}],["this.scoreservice",{"_index":174,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/PlayerService.html":{}}}],["this.selectable",{"_index":876,"title":{},"body":{"classes/ScoreRow.html":{}}}],["this.selected",{"_index":684,"title":{},"body":{"classes/Die.html":{}}}],["this.sid",{"_index":160,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.side",{"_index":683,"title":{},"body":{"classes/Die.html":{}}}],["this.socket.emit('checkonline",{"_index":993,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.emit('dicehit",{"_index":997,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.emit('dicemove",{"_index":1000,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.emit('gamedone",{"_index":1004,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.emit('joinroom",{"_index":995,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.emit('nextplayer",{"_index":1002,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.emit('triggerqueue",{"_index":1006,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('amtofplayers",{"_index":1016,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('disconnected",{"_index":1026,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('disconnectedinqueuefour",{"_index":1032,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('disconnectedinqueuethree",{"_index":1030,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('disconnectedinqueuetwo",{"_index":1028,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('fullgame",{"_index":1012,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('getdice",{"_index":1018,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('getdicemovement",{"_index":1020,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('getnextplayer",{"_index":1022,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('online",{"_index":1034,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('players",{"_index":1014,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('queuenumbers",{"_index":1036,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('roomname",{"_index":1010,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.fromevent('userid",{"_index":1024,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socketid",{"_index":830,"title":{},"body":{"classes/Player.html":{}}}],["this.socketservice.dicehit(this.dice",{"_index":583,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.socketservice.dicemoving(this.dice",{"_index":567,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.socketservice.getamtofplayersinroom().subscribe(amtofplayers",{"_index":737,"title":{},"body":{"components/GameComponent.html":{}}}],["this.socketservice.getdicehit().subscribe(dice",{"_index":546,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.socketservice.getdicemovement().subscribe((dice",{"_index":558,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.socketservice.getdisconnectedplayerinfourqueue().subscribe(amtofplayers",{"_index":748,"title":{},"body":{"components/GameComponent.html":{}}}],["this.socketservice.getdisconnectedplayerinthreequeue().subscribe(amtofplayers",{"_index":747,"title":{},"body":{"components/GameComponent.html":{}}}],["this.socketservice.getdisconnectedplayerintwoqueue().subscribe(amtofplayers",{"_index":746,"title":{},"body":{"components/GameComponent.html":{}}}],["this.socketservice.getonlinecheck().subscribe(online",{"_index":157,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.socketservice.getqueuenumbers().subscribe(queuenumbers",{"_index":154,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.socketservice.getroomfull().subscribe(status",{"_index":735,"title":{},"body":{"components/GameComponent.html":{}}}],["this.socketservice.getroomname().subscribe(room",{"_index":742,"title":{},"body":{"components/GameComponent.html":{}}}],["this.socketservice.getuserid().subscribe(userid",{"_index":159,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.socketservice.joinroom(name",{"_index":181,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.socketservice.setgameend(this.socketservice.roomname",{"_index":892,"title":{},"body":{"injectables/ScoreService.html":{}}}],["this.socketservice.setroomname(room",{"_index":743,"title":{},"body":{"components/GameComponent.html":{}}}],["this.socketservice.triggeronlinecheck(true",{"_index":155,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.socketservice.triggerqueuenumbers(true",{"_index":152,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["this.sound",{"_index":1056,"title":{},"body":{"components/SoundComponent.html":{}}}],["this.soundchange",{"_index":518,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.soundstate",{"_index":535,"title":{},"body":{"components/DicesComponent.html":{}}}],["this.soundstate.asobservable",{"_index":363,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.soundstate.next(sound",{"_index":361,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.subscriptions.foreach(subscription",{"_index":561,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["this.translate.instant('languages.english",{"_index":794,"title":{},"body":{"components/LanguageComponent.html":{}}}],["this.translate.instant('languages.swedish",{"_index":790,"title":{},"body":{"components/LanguageComponent.html":{}}}],["this.translate.onlangchange.subscribe((event",{"_index":803,"title":{},"body":{"components/LanguageComponent.html":{}}}],["this.translate.stream('languages').subscribe(translation",{"_index":804,"title":{},"body":{"components/LanguageComponent.html":{}}}],["this.translate.use(localecode",{"_index":811,"title":{},"body":{"components/LanguageComponent.html":{}}}],["this.translateservice",{"_index":175,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/PlayerService.html":{}}}],["three",{"_index":958,"title":{},"body":{"injectables/SocketService.html":{}}}],["title",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":669,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["transition",{"_index":620,"title":{},"body":{"components/DicesComponent.html":{}}}],["translate",{"_index":187,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{}}}],["translate.setdefaultlang('sv",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('sv",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":127,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["translate/http",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":46,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{}}}],["transparent",{"_index":600,"title":{},"body":{"components/DicesComponent.html":{},"components/LanguageComponent.html":{},"components/SoundComponent.html":{}}}],["transports",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["trigger",{"_index":62,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/SocketService.html":{}}}],["triggeronlinecheck",{"_index":934,"title":{},"body":{"injectables/SocketService.html":{}}}],["triggeronlinecheck(x",{"_index":986,"title":{},"body":{"injectables/SocketService.html":{}}}],["triggerqueuenumbers",{"_index":935,"title":{},"body":{"injectables/SocketService.html":{}}}],["triggerqueuenumbers(x",{"_index":990,"title":{},"body":{"injectables/SocketService.html":{}}}],["true",{"_index":185,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"injectables/PlayerService.html":{},"components/SoundComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":376,"title":{},"body":{"injectables/DiceService.html":{},"components/DicesComponent.html":{}}}],["two",{"_index":960,"title":{},"body":{"injectables/SocketService.html":{}}}],["type",{"_index":54,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"classes/Die.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/ScoreRow.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":971,"title":{},"body":{"injectables/SocketService.html":{}}}],["unavailable",{"_index":456,"title":{},"body":{"components/DicesComponent.html":{}}}],["unit",{"_index":1163,"title":{},"body":{"index.html":{}}}],["unsubscribes",{"_index":57,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{}}}],["updates",{"_index":470,"title":{},"body":{"components/DicesComponent.html":{}}}],["upon",{"_index":446,"title":{},"body":{"components/DicesComponent.html":{},"injectables/SocketService.html":{},"miscellaneous/functions.html":{}}}],["url",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":781,"title":{},"body":{"components/LanguageComponent.html":{},"components/SoundComponent.html":{},"index.html":{}}}],["used",{"_index":739,"title":{},"body":{"components/GameComponent.html":{},"components/LanguageComponent.html":{},"injectables/SocketService.html":{}}}],["usefactory",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":84,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/DicesComponent.html":{},"injectables/SocketService.html":{}}}],["user's",{"_index":529,"title":{},"body":{"components/DicesComponent.html":{}}}],["userid",{"_index":161,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["users",{"_index":700,"title":{},"body":{"components/GameComponent.html":{},"components/LanguageComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["v1.0.5.5",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators",{"_index":120,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["validators.pattern('[a",{"_index":97,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["validators.required",{"_index":96,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["value",{"_index":94,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"components/SetScoreConfirmationComponent.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":436,"title":{},"body":{"components/DicesComponent.html":{}}}],["var",{"_index":204,"title":{},"body":{"components/AddPlayersComponent.html":{},"components/AppComponent.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LandingPageComponent.html":{},"components/LanguageComponent.html":{},"components/SetScoreConfirmationComponent.html":{},"components/SoundComponent.html":{}}}],["variable",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":143,"title":{"miscellaneous/variables.html":{}},"body":{"components/AddPlayersComponent.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["vertical",{"_index":613,"title":{},"body":{"components/DicesComponent.html":{}}}],["via",{"_index":1167,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":118,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["visibility",{"_index":818,"title":{},"body":{"components/LanguageComponent.html":{}}}],["void",{"_index":60,"title":{},"body":{"components/AddPlayersComponent.html":{},"injectables/ClientService.html":{},"injectables/DiceService.html":{},"components/DicesComponent.html":{},"components/GameComponent.html":{},"components/LanguageComponent.html":{},"injectables/PlayerService.html":{},"injectables/ScoreService.html":{},"injectables/SocketService.html":{},"components/SoundComponent.html":{}}}],["waiting",{"_index":751,"title":{},"body":{"components/GameComponent.html":{}}}],["webkit",{"_index":617,"title":{},"body":{"components/DicesComponent.html":{}}}],["websocket",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["weight",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["wether",{"_index":962,"title":{},"body":{"injectables/SocketService.html":{}}}],["white",{"_index":592,"title":{},"body":{"components/DicesComponent.html":{}}}],["width",{"_index":598,"title":{},"body":{"components/DicesComponent.html":{},"components/GameComponent.html":{}}}],["width:var",{"_index":816,"title":{},"body":{"components/LanguageComponent.html":{}}}],["x",{"_index":636,"title":{},"body":{"components/DicesComponent.html":{},"injectables/SocketService.html":{}}}],["y",{"_index":638,"title":{},"body":{"components/DicesComponent.html":{}}}],["yatzy",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["yatzyserver",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":872,"title":{},"body":{"classes/ScoreRow.html":{}}}],["yourturnanimation",{"_index":1068,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["yourturnanimation(animationspeed",{"_index":1136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponent.html":{}}}],["z0",{"_index":99,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["za",{"_index":98,"title":{},"body":{"components/AddPlayersComponent.html":{}}}],["zone.js",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddPlayersComponent.html":{"url":"components/AddPlayersComponent.html","title":"component - AddPlayersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddPlayersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/add-players/add-players.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addPlayers\n            \n\n            \n                styleUrls\n                ./add-players.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-players.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clientId$\n                            \n                            \n                                    Public\n                                nameForm\n                            \n                            \n                                    Public\n                                onlineCheck\n                            \n                            \n                                    Private\n                                onlineCheck$\n                            \n                            \n                                    Public\n                                queueNumbers\n                            \n                            \n                                    Private\n                                queueNumbers$\n                            \n                            \n                                    Public\n                                sid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                setName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, diceService: DiceService, scoreService: ScoreService, socketService: SocketService, formBuilder: FormBuilder, playerService: PlayerService, translateService: TranslateService, modal: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/add-players/add-players.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        diceService\n                                                  \n                                                        \n                                                                        DiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scoreService\n                                                  \n                                                        \n                                                                        ScoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socketService\n                                                  \n                                                        \n                                                                        SocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/add-players/add-players.component.ts:76\n                \n            \n\n\n            \n                \n                    Unsubscribes from obeservables\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/add-players/add-players.component.ts:55\n                \n            \n\n\n            \n                \n                    Trigger the backend to emit the queue numbers and then retrieves them.\nTrigger the backend to emit online status and then retrieves it.\nRetrieves the clients socket ID from the backend.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setName\n                        \n                    \n                \n            \n            \n                \n                    \n                    setName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/add-players/add-players.component.ts:95\n                \n            \n\n\n            \n                \n                    Creates a new player.\nSets the chosen maxplayers in the playerService\nSets the clientPlayer in the playerService\nAsks the backend to join a room if the user has chose more than 1 maxplayers.\nResets the form\nDirects the user to the game component.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clientId$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/components/add-players/add-players.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        nameForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9åäöÅÄÖ\\\\s-]{2,30}')]],\n    maxPlayers: ['', [Validators.required]]\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/add-players/add-players.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onlineCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/add-players/add-players.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onlineCheck$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/components/add-players/add-players.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queueNumbers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/add-players/add-players.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        queueNumbers$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/components/add-players/add-players.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/add-players/add-players.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewChecked, AfterViewInit, Component, DoCheck, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport { firstValueFrom, max, Subscription, take } from 'rxjs';\nimport { Player } from 'src/app/models/player';\nimport { ScoreBoard } from 'src/app/models/score-board';\nimport { DiceService } from 'src/app/services/dice.service';\nimport { PlayerService } from 'src/app/services/player.service';\nimport { ScoreService } from 'src/app/services/score.service';\nimport { SocketService } from 'src/app/services/socket.service';\n\n@Component({\n  selector: 'app-addPlayers',\n  templateUrl: './add-players.component.html',\n  styleUrls: ['./add-players.component.css']\n})\nexport class AddPlayersComponent implements OnInit, OnDestroy {\n  //Misc variables\n  public sid: string = \"\";\n  public onlineCheck: boolean = false;\n  public queueNumbers: any = {};\n  \n  //Form\n  public nameForm = this.formBuilder.group({\n    name: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9åäöÅÄÖ\\\\s-]{2,30}')]],\n    maxPlayers: ['', [Validators.required]]\n  })\n\n  //Subscriptions\n  private onlineCheck$: Subscription = new Subscription;\n  private queueNumbers$: Subscription = new Subscription;\n  private clientId$: Subscription = new Subscription;\n\n  constructor(\n    private router: Router, \n    private diceService: DiceService, \n    private scoreService: ScoreService, \n    private socketService: SocketService, \n    private formBuilder: FormBuilder, \n    private playerService: PlayerService,\n    private translateService: TranslateService,\n    private modal: NgbModal\n  ) {}\n\n  /**\n   * Trigger the backend to emit the queue numbers and then retrieves them.\n   * Trigger the backend to emit online status and then retrieves it.\n   * Retrieves the clients socket ID from the backend.\n   *\n   * @date 2023-02-02 - 12:41:07\n   * @author Christopher Reineborn\n   */\n  ngOnInit(): void {\n    this.socketService.triggerQueueNumbers(true);\n    this.queueNumbers$ = this.socketService.getQueueNumbers().subscribe(queueNumbers => {\n      this.queueNumbers = queueNumbers;\n    })\n\n    this.socketService.triggerOnlineCheck(true);\n    this.onlineCheck$ = this.socketService.getOnlineCheck().subscribe(online => {\n      this.onlineCheck = online;\n    })\n\n    this.clientId$ = this.socketService.getUserID().subscribe(userID => {\n      this.sid = userID;\n    })\n  }\n  \n  /**\n   * Unsubscribes from obeservables\n   * @date 2023-02-02 - 15:35:04\n   * @author Christopher Reineborn\n   */\n  ngOnDestroy(): void {\n    this.onlineCheck$.unsubscribe();\n    this.clientId$.unsubscribe();\n    this.queueNumbers$.unsubscribe();\n  }\n\n /**\n  * Creates a new player.\n  * Sets the chosen maxplayers in the playerService\n  * Sets the clientPlayer in the playerService\n  * Asks the backend to join a room if the user has chose more than 1 maxplayers.\n  * Resets the form\n  * Directs the user to the game component.\n  * \n  * @date 2023-01-31 - 11:37:00\n  * @author Christopher Reineborn\n  *\n  * @returns {*}\n  */\n  public setName(): void {\n    if(this.nameForm.valid && this.onlineCheck){\n      const name = this.nameForm.controls['name'].value!;\n      const clientPlayer = new Player(name, this.sid, false, new ScoreBoard(this.diceService, this.scoreService, this.translateService, this.modal));\n      const maxPlayers = Number(this.nameForm.controls['maxPlayers'].value)\n      \n      this.playerService.setChosenMaxPlayers(maxPlayers);\n      this.playerService.setClientPlayer(clientPlayer);\n      \n      if(maxPlayers > 1){\n        this.socketService.joinRoom(name, maxPlayers);\n      }\n      this.nameForm.reset();\n\n      this.router.navigate(['game'], {skipLocationChange: true});\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        {{\"ADDPLAYER.LETSPLAY\" | translate }}\n    \n    \n        \n            {{\"ADDPLAYER.NAME\" | translate}}:\n            \n\n            {{\"ADDPLAYER.MAXPLAYERS\" | translate}}:\n            \n                \n                \n                    {{\"ADDPLAYER.SINGLE\" | translate}}\n                \n            \n            \n                \n                \n                    {{\"ADDPLAYER.TWOPLAYER\" | translate}} ({{this.queueNumbers.qTwo}}/2)\n                \n            \n            \n                \n                \n                    {{\"ADDPLAYER.THREEPLAYER\" | translate}} ({{this.queueNumbers.qThree}}/3)\n                \n            \n            \n                \n                \n                    {{\"ADDPLAYER.FOURPLAYER\" | translate}} ({{this.queueNumbers.qFour}}/4)\n                \n            \n\n            \n                {{\"ADDPLAYER.JOINGAME\" | translate}}\n            \n        \n        \n            \n                \n                {{\"ADDPLAYER.SERVERON\" | translate}}\n            \n            \n                \n                {{\"ADDPLAYER.SERVEROFF\" | translate}}\n            \n        \n    \n\n    \n\n    \n                \n                    ./add-players.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{\"ADDPLAYER.LETSPLAY\" | translate }}                            {{\"ADDPLAYER.NAME\" | translate}}:                        {{\"ADDPLAYER.MAXPLAYERS\" | translate}}:                                                                {{\"ADDPLAYER.SINGLE\" | translate}}                                                                                            {{\"ADDPLAYER.TWOPLAYER\" | translate}} ({{this.queueNumbers.qTwo}}/2)                                                                                            {{\"ADDPLAYER.THREEPLAYER\" | translate}} ({{this.queueNumbers.qThree}}/3)                                                                                            {{\"ADDPLAYER.FOURPLAYER\" | translate}} ({{this.queueNumbers.qFour}}/4)                                                        {{\"ADDPLAYER.JOINGAME\" | translate}}                                                                        {{\"ADDPLAYER.SERVERON\" | translate}}                                                        {{\"ADDPLAYER.SERVEROFF\" | translate}}                        '\n    var COMPONENTS = [{'name': 'AddPlayersComponent', 'selector': 'app-addPlayers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DicesComponent', 'selector': 'app-dices'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'ScoreBoardComponent', 'selector': 'app-scoreBoard'},{'name': 'SetScoreConfirmationComponent', 'selector': 'app-set-score-confirmation'},{'name': 'SoundComponent', 'selector': 'app-sound'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddPlayersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Yatzy App'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Default value : version\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { version } from './global/version';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Yatzy App';\n  version = version;\n\n  constructor(translate: TranslateService){\n    translate.setDefaultLang('sv');\n    translate.use('sv');\n  }\n}\n\n    \n\n    \n        \n    \n      Yatzy App{{version}}\n      by Christopher Reineborn \n    \n    Yatzy App\n    by Christopher Reineborn -->\n    \n    \n\n    \n    \n   -->\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .navindex {\n    z-index: 100;\n}\n\n.author {\n    font-size: 0.8rem;\n}\n\n.version {\n    font-size: 0.7rem;\n    margin-left: 0.4rem;\n}\n\n.brand {\n    font-weight: 700;\n    font-size: 1.5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Yatzy App{{version}}      by Christopher Reineborn         Yatzy App    by Christopher Reineborn -->                   -->'\n    var COMPONENTS = [{'name': 'AddPlayersComponent', 'selector': 'app-addPlayers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DicesComponent', 'selector': 'app-dices'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'ScoreBoardComponent', 'selector': 'app-scoreBoard'},{'name': 'SetScoreConfirmationComponent', 'selector': 'app-set-score-confirmation'},{'name': 'SoundComponent', 'selector': 'app-sound'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAddPlayersComponent\n\nAddPlayersComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddPlayersComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDicesComponent\n\nDicesComponent\n\nAppModule -->\n\nDicesComponent->AppModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nAppModule -->\n\nGameComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLanguageComponent\n\nLanguageComponent\n\nAppModule -->\n\nLanguageComponent->AppModule\n\n\n\n\n\nScoreBoardComponent\n\nScoreBoardComponent\n\nAppModule -->\n\nScoreBoardComponent->AppModule\n\n\n\n\n\nSetScoreConfirmationComponent\n\nSetScoreConfirmationComponent\n\nAppModule -->\n\nSetScoreConfirmationComponent->AppModule\n\n\n\n\n\nSoundComponent\n\nSoundComponent\n\nAppModule -->\n\nSoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddPlayersComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            DicesComponent\n                        \n                        \n                            GameComponent\n                        \n                        \n                            LandingPageComponent\n                        \n                        \n                            LanguageComponent\n                        \n                        \n                            ScoreBoardComponent\n                        \n                        \n                            SetScoreConfirmationComponent\n                        \n                        \n                            SoundComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { environment } from 'src/environments/environment';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DicesComponent } from './components/dices/dices.component';\nimport { ScoreBoardComponent } from './components/score-board/score-board.component';\nimport { AddPlayersComponent } from './components/add-players/add-players.component';\nimport { LandingPageComponent } from './pages/landing-page/landing-page.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GameComponent } from './pages/game/game.component';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { LanguageComponent } from './components/language/language.component';\nimport { SoundComponent } from './components/sound/sound.component';\nimport { SetScoreConfirmationComponent } from './components/modals/set-score-confirmation/set-score-confirmation.component';\n\n\nconst config: SocketIoConfig = {\n  url: environment.socketUrl,\n  options: {\n    transports: ['websocket'],\n    reconnection: false\n  }\n}\n\nconst routes: Routes = [\n  {path: '', component: LandingPageComponent},\n  {path: 'game', component: GameComponent}\n]\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, 'assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DicesComponent,\n    ScoreBoardComponent,\n    AddPlayersComponent,\n    LandingPageComponent,\n    GameComponent,\n    LanguageComponent,\n    SoundComponent,\n    SetScoreConfirmationComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    SocketIoModule.forRoot(config),\n    TranslateModule.forRoot({\n      defaultLanguage: 'sv',\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientService.html":{"url":"injectables/ClientService.html","title":"injectable - ClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                soundState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSound\n                            \n                            \n                                setSound\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/client.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSound\n                        \n                    \n                \n            \n            \n                \ngetSound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/client.service.ts:32\n                \n            \n\n\n            \n                \n                    Distributes the sound state to subscribers.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \nAn observable of the sound state\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSound\n                        \n                    \n                \n            \n            \n                \nsetSound(sound: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/client.service.ts:20\n                \n            \n\n\n            \n                \n                    Setting the sound state to be distributed to subscribers.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sound\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        soundState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/client.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  private soundState: BehaviorSubject = new BehaviorSubject(true);\n\n  constructor() { }\n  \n  /**\n   * Setting the sound state to be distributed to subscribers.\n   * @date 2/15/2023 - 1:24:44 PM\n   * @author Christopher Reineborn\n   *\n   * @param {boolean} soundState - sound state to be set in the Behavior Subject\n   */\n  setSound(sound: boolean){\n    this.soundState.next(sound);\n  }\n\n  \n  /**\n   * Distributes the sound state to subscribers.\n   * @date 2/15/2023 - 1:26:08 PM\n   * @author Christopher Reineborn\n   *\n   * @returns {Observable} - An observable of the sound state\n   */\n  getSound(): Observable {\n    return this.soundState.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DiceService.html":{"url":"injectables/DiceService.html","title":"injectable - DiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dice.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dice\n                            \n                            \n                                    Public\n                                newTurn\n                            \n                            \n                                    Public\n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDice\n                            \n                            \n                                    Public\n                                getNewTurn\n                            \n                            \n                                    Public\n                                getReset\n                            \n                            \n                                    Public\n                                setDice\n                            \n                            \n                                    Public\n                                setNewTurn\n                            \n                            \n                                    Public\n                                setReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dice.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDice\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/dice.service.ts:36\n                \n            \n\n\n            \n                \n                    Distributes the dice to subscribers\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nAn observable of the dice\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNewTurn\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewTurn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/dice.service.ts:87\n                \n            \n\n\n            \n                \n                    Distributes the new turn state to subscribers\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \nAn observable of the new turn state\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getReset\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/dice.service.ts:61\n                \n            \n\n\n            \n                \n                    Distributes the reset state to subscribers\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \nAn observable of the reset state\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setDice\n                        \n                    \n                \n            \n            \n                \n                    \n                    setDice(dice: Die[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/dice.service.ts:24\n                \n            \n\n\n            \n                \n                    Setting the dice to be distributed to subscribers.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dice\n                                    \n                                                Die[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nDice array to be set in the Subject\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setNewTurn\n                        \n                    \n                \n            \n            \n                \n                    \n                    setNewTurn(reset: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/dice.service.ts:74\n                \n            \n\n\n            \n                \n                    Set the new turn state to be distributed to subscribers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    reset\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew turn state to be set in the Subject\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setReset\n                        \n                    \n                \n            \n            \n                \n                    \n                    setReset(reset: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/dice.service.ts:49\n                \n            \n\n\n            \n                \n                    Setting the reset state to be distributed to subscribers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    reset\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReset state to be set in the Subject\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dice\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dice.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        newTurn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dice.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dice.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Die } from '../models/die';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiceService {\n  public dice = new Subject();\n  public reset = new Subject();\n  public newTurn = new Subject();\n\n  constructor() { }\n\n  \n  /**\n   * Setting the dice to be distributed to subscribers.\n   * @date 2/15/2023 - 1:27:58 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @param {Die[]} dice - Dice array to be set in the Subject\n   */\n  public setDice(dice: Die[]): void {\n    this.dice.next(dice);\n  }\n\n  /**\n   * Distributes the dice to subscribers\n   * @date 2/15/2023 - 1:29:02 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @returns {Observable} - An observable of the dice\n   */\n  public getDice(): Observable {\n    return this.dice.asObservable();\n  }\n\n  \n  /**\n   * Setting the reset state to be distributed to subscribers\n   * @date 2/15/2023 - 2:14:02 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @param {boolean} reset - Reset state to be set in the Subject\n   */\n  public setReset(reset: boolean): void {\n    this.reset.next(reset);\n  }\n\n  /**\n   * Distributes the reset state to subscribers\n   * @date 2/15/2023 - 2:15:02 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @returns {Observable} - An observable of the reset state\n   */\n  public getReset(): Observable {\n    return this.reset.asObservable();\n  }\n\n\n  /**\n   * Set the new turn state to be distributed to subscribers\n   * @date 2/15/2023 - 2:16:36 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @param {boolean} reset - New turn state to be set in the Subject\n   */\n  public setNewTurn(reset: boolean): void {\n    this.newTurn.next(reset);\n  }\n\n  \n  /**\n   * Distributes the new turn state to subscribers\n   * @date 2/15/2023 - 2:17:12 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @returns {Observable} - An observable of the new turn state\n   */\n  public getNewTurn(): Observable {\n    return this.newTurn.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DicesComponent.html":{"url":"components/DicesComponent.html","title":"component - DicesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DicesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dices/dices.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dices\n            \n\n            \n                styleUrls\n                ./dices.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dices.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationState\n                            \n                            \n                                    Public\n                                chosenMaxPlayer\n                            \n                            \n                                    Public\n                                clientPlayer\n                            \n                            \n                                    Public\n                                currentHits\n                            \n                            \n                                    Public\n                                currentPlayer\n                            \n                            \n                                    Private\n                                currentPlayer$\n                            \n                            \n                                    Public\n                                dice\n                            \n                            \n                                    Private\n                                diceAudio\n                            \n                            \n                                    Private\n                                diceHit$\n                            \n                            \n                                    Private\n                                diceMovement$\n                            \n                            \n                                    Public\n                                dieFive\n                            \n                            \n                                    Public\n                                dieFour\n                            \n                            \n                                    Public\n                                dieOne\n                            \n                            \n                                    Public\n                                dieThree\n                            \n                            \n                                    Public\n                                dieTwo\n                            \n                            \n                                    Public\n                                disablePlayButton\n                            \n                            \n                                    Public\n                                isDiceAvailable\n                            \n                            \n                                    Private\n                                newTurn$\n                            \n                            \n                                    Private\n                                resetDice$\n                            \n                            \n                                    Private\n                                soundChange$\n                            \n                            \n                                    Private\n                                    Optional\n                                soundState\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animateDiceRoll\n                            \n                            \n                                    Public\n                                hitDices\n                            \n                            \n                                    Private\n                                newTurn\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Private\n                                resetDices\n                            \n                            \n                                    Public\n                                selectDie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(diceService: DiceService, playerService: PlayerService, socketService: SocketService, clientService: ClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dices/dices.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        diceService\n                                                  \n                                                        \n                                                                        DiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socketService\n                                                  \n                                                        \n                                                                        SocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        animateDiceRoll\n                        \n                    \n                \n            \n            \n                \n                    \n                    animateDiceRoll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dices/dices.component.ts:222\n                \n            \n\n\n            \n                \n                    Animate dice rolling\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hitDices\n                        \n                    \n                \n            \n            \n                \n                    \n                    hitDices()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dices/dices.component.ts:168\n                \n            \n\n\n            \n                \n                    Animate dice rolling and play dice rolling sound if sound is not muted.\nGenerates new values for each of the dice in the array of available dice, if the value is anything else than -1.\nControls what the current hits counter is and enables/disables the play button upon that control.\nMakes the dice available to be moved and sends the dice to both backend and dice service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        newTurn\n                        \n                    \n                \n            \n            \n                \n                    \n                    newTurn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dices/dices.component.ts:190\n                \n            \n\n\n            \n                \n                    Resets all dice, resets all the arrays, resets the hit counter, makes the dice unavailable and disables the play button.\nIf singleplayer, also sends the resetted dice into dice service.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dices/dices.component.ts:119\n                \n            \n\n\n            \n                \n                    Unsubscribes from all observables.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dices/dices.component.ts:63\n                \n            \n\n\n            \n                \n                    Retrieves the client player and stores it in @param this.clientPlayer\nSubscribes to multiple observables in order to recieve updates.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        resetDices\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetDices()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dices/dices.component.ts:205\n                \n            \n\n\n            \n                \n                    Resets all dice, resets all arrays and resets the hit counter.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        selectDie\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectDie(die: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dices/dices.component.ts:133\n                \n            \n\n\n            \n                \n                    Decides what die to send to @function moveDicesToSaved()\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    die\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nwhich die to send.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        animationState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chosenMaxPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clientPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentHits\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPlayer$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Die[]\n\n                    \n                \n                \n                    \n                        Default value : [this.dieOne, this.dieTwo, this.dieThree, this.dieFour, this.dieFive]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        diceAudio\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Audio('https://zylion.se/rollingdice.mp3')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        diceHit$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        diceMovement$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dieFive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Die(5, 0, false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dieFour\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Die(4, 0, false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dieOne\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Die(1, 0, false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dieThree\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Die(3, 0, false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dieTwo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Die(2, 0, false)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        disablePlayButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isDiceAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        newTurn$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetDice$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        soundChange$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        soundState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : [this.newTurn$, this.resetDice$, this.currentPlayer$, this.diceHit$, this.diceMovement$, this.soundChange$]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dices/dices.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { rotateAnimation } from 'src/app/animations/rotate.animation';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { firstValueFrom, Subscription } from 'rxjs';\nimport { Die } from 'src/app/models/die';\nimport { Player } from 'src/app/models/player';\nimport { DiceService } from 'src/app/services/dice.service';\nimport { PlayerService } from 'src/app/services/player.service';\nimport { SocketService } from 'src/app/services/socket.service';\nimport { ClientService } from 'src/app/services/client.service';\n\n@Component({\n  selector: 'app-dices',\n  templateUrl: './dices.component.html',\n  styleUrls: ['./dices.component.css'],\n  animations: [rotateAnimation(4, 300)]\n})\n\nexport class DicesComponent implements OnInit, OnDestroy {\n  //Dice\n  public dieOne = new Die(1, 0, false);\n  public dieTwo = new Die(2, 0, false);\n  public dieThree = new Die(3, 0, false);\n  public dieFour = new Die(4, 0, false);\n  public dieFive = new Die(5, 0, false);\n  public dice: Die[] = [this.dieOne, this.dieTwo, this.dieThree, this.dieFour, this.dieFive];\n  public currentHits: number = 0;\n  public isDiceAvailable: boolean = true;\n\n  //Player\n  public clientPlayer: Partial = {};\n  public currentPlayer: Partial = {};\n  public chosenMaxPlayer: number = 0;\n  \n  public disablePlayButton: boolean = false;\n\n  //Misc\n  private soundState?: boolean;\n  public animationState: boolean = true;\n  private diceAudio = new Audio('https://zylion.se/rollingdice.mp3')\n\n  //Subscriptions\n  private newTurn$: Subscription = new Subscription;\n  private resetDice$: Subscription = new Subscription;\n  private currentPlayer$: Subscription = new Subscription;\n  private diceHit$: Subscription = new Subscription;\n  private diceMovement$: Subscription = new Subscription;\n  private soundChange$: Subscription = new Subscription;\n  private subscriptions: Subscription[] = [this.newTurn$, this.resetDice$, this.currentPlayer$, this.diceHit$, this.diceMovement$, this.soundChange$];\n\n  constructor(\n    private diceService: DiceService, \n    private playerService: PlayerService,\n    private socketService: SocketService,\n    private clientService: ClientService\n  ) { }\n\n  /**\n   * Retrieves the client player and stores it in @param this.clientPlayer\n   * Subscribes to multiple observables in order to recieve updates.\n   * @date 2023-01-31 - 12:00:49\n   * @author Christopher Reineborn\n   */\n  async ngOnInit(): Promise {\n    this.diceAudio.load();\n    this.clientPlayer = this.playerService.getClientPlayer();\n\n    //Retrieves user's chosen max player\n    this.chosenMaxPlayer = await firstValueFrom(this.playerService.getChosenMaxPlayers());\n\n    //Subscribes to sound state change\n    this.soundChange$ = this.clientService.getSound().subscribe(sound => {\n      this.soundState = sound;\n    })\n\n    //Subscribes to new turn\n    this.newTurn$ = this.diceService.getNewTurn().subscribe(bool => {\n      if(bool) {\n        this.newTurn();\n        this.diceService.setNewTurn(false);\n      }\n    })\n\n    //Subscribes to reset dice\n    this.resetDice$ = this.diceService.getReset().subscribe(bool =>{\n      if(bool){\n        this.resetDices();\n        this.diceService.setReset(false);\n      }\n    })\n\n    //Subscribes to Current Player\n    this.currentPlayer$ = this.playerService.getCurrentPlayer().subscribe(player => {\n      this.currentPlayer = player;\n      this.currentPlayer.socketId === this.clientPlayer.socketId ? this.disablePlayButton = false : this.disablePlayButton = true;\n    })\n\n    //Subscribes to dice hit from backend\n    this.diceHit$ = this.socketService.getDiceHit().subscribe(dice => {\n      this.animateDiceRoll();\n      this.soundState === true ? this.diceAudio.play() : null;\n      this.dice.map((die, index) => {\n        die.die = dice[index].die,\n        die.selected = dice[index].selected,\n        die.side = dice[index].side\n      })\n    })\n\n    //Subscribes to dice movement from backend\n    this.diceMovement$ = this.socketService.getDiceMovement().subscribe((dice: any) => {\n      this.dice = [...dice];\n    })\n  }\n\n  /**\n   * Unsubscribes from all observables.\n   * @date 2023-01-31 - 12:10:41\n   * @author Christopher Reineborn\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    })\n  }\n\n  /**\n   * Decides what die to send to @function moveDicesToSaved()\n   * @date 2023-01-31 - 12:11:07\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @param {number} die - which die to send.\n   */\n  public selectDie(die: number): void {\n    switch(die){\n      case 0:\n        this.dieOne.selected === false ? this.dieOne.selected = true : this.dieOne.selected = false;\n        this.socketService.diceMoving(this.dice);\n        break;\n      case 1:\n        this.dieTwo.selected === false ? this.dieTwo.selected = true : this.dieTwo.selected = false;\n        this.socketService.diceMoving(this.dice);\n        break;\n      case 2:\n        this.dieThree.selected === false ? this.dieThree.selected = true : this.dieThree.selected = false;\n        this.socketService.diceMoving(this.dice);\n        break;\n      case 3:\n        this.dieFour.selected === false ? this.dieFour.selected = true : this.dieFour.selected = false;\n        this.socketService.diceMoving(this.dice);\n        break;\n      case 4:\n        this.dieFive.selected === false ? this.dieFive.selected = true : this.dieFive.selected = false;\n        this.socketService.diceMoving(this.dice);\n        break;\n    }\n  }\n\n  /**\n   * Animate dice rolling and play dice rolling sound if sound is not muted.\n   * Generates new values for each of the dice in the array of available dice, if the value is anything else than -1.\n   * Controls what the current hits counter is and enables/disables the play button upon that control.\n   * Makes the dice available to be moved and sends the dice to both backend and dice service.\n   * @date 2023-01-31 - 12:19:43\n   * @author Christopher Reineborn\n   * \n   * @public\n   */\n  public hitDices(): void {\n    this.animateDiceRoll();\n    this.soundState === true ? this.diceAudio.play() : null;\n\n    this.dice.map(die => die.side != -1 && die.selected === false ? die.side = Math.floor(Math.random() * 6) + 1 : null)\n    \n    this.currentHits += 1;\n    this.currentHits >= 3 ? this.disablePlayButton = true : this.disablePlayButton = false;\n    this.isDiceAvailable = false;\n    \n    this.diceService.setDice(this.dice);\n    this.socketService.diceHit(this.dice);\n  }\n\n  /**\n   * Resets all dice, resets all the arrays, resets the hit counter, makes the dice unavailable and disables the play button.\n   * If singleplayer, also sends the resetted dice into dice service.\n   * @date 2023-01-31 - 12:30:25\n   * @author Christopher Reineborn\n   *\n   * @private\n   */\n  private newTurn(): void {\n    this.resetDices();\n    this.isDiceAvailable = true;\n    this.disablePlayButton = false;\n    \n    this.chosenMaxPlayer === 1 ? this.diceService.setDice(this.dice) : null;\n  }\n  \n  /**\n   * Resets all dice, resets all arrays and resets the hit counter.\n   * @date 2023-02-02 - 15:26:17\n   * @author Christopher Reineborn\n   *\n   * @private\n   */\n  private resetDices(): void {\n    this.dieOne = new Die(1, 0, false);\n    this.dieTwo = new Die(2, 0, false);\n    this.dieThree = new Die(3, 0, false);\n    this.dieFour = new Die(4, 0, false);\n    this.dieFive = new Die(5, 0, false);\n    this.dice = [this.dieOne, this.dieTwo, this.dieThree, this.dieFour, this.dieFive];\n    this.currentHits = 0;\n  }\n\n  \n  /**\n   * Animate dice rolling\n   * @date 2/15/2023 - 11:13:24 AM\n   *\n   * @private\n   */\n  private animateDiceRoll() {\n    setTimeout(()=>{\n      this.animationState = !this.animationState;\n    },1)\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n        \n        \n            \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./dices.component.css\n                \n                .btn-play {\n    --bs-btn-color: white;\n    --bs-btn-border-color: rgb(240, 140, 0);\n    --bs-btn-bg: rgb(240,140,0);\n    --bs-btn-border-width: 1px;\n    --bs-btn-border-color: transparent;\n    --bs-btn-border-radius: 100%;\n    --btn-custom: calc(2.3rem + (1.5vw + 1.5vh));\n    display:inline-block;\n    color: var(--bs-btn-color);\n    text-align: center;\n    text-decoration: none;\n    vertical-align: middle;\n    cursor: pointer;\n    -webkit-user-select: none;\n    user-select: none;\n    border: none;\n    border-radius: var(--bs-btn-border-radius);\n    background-color: var(--bs-btn-bg);\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    width: var(--btn-custom);\n    height: var(--btn-custom);\n    font-size: calc(2rem + 1vw);\n    margin: 0 0 0 1rem;\n}\n\n.btn-play:hover{\n\n    background-color: rgb(240, 110, 0);\n    transition: background-color 0.5s ease-in-out, border-color 0.3s ease-in-out;\n}\n\n.btn-play:active {\n    background-color: rgb(240, 90, 0);\n    transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;\n}\n\n.btn-dice {\n    --bs-btn-padding-x: 0.5vw;\n    --bs-btn-padding-y: 0.5vh;\n    --bs-btn-color: #212529;\n    --bs-btn-bg: transparent;\n    --bs-btn-border-width: 1px;\n    --bs-btn-border-color: transparent;\n    --bs-btn-border-radius: 0.375rem;\n    --bs-btn-hover-border-color: transparent;\n    --bs-btn-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);\n    --bs-btn-disabled-opacity: 0.65;\n    --bs-btn-focus-box-shadow: 0 0 0 0.25rem rgba(var(--bs-btn-focus-shadow-rgb), .5);\n    display: inline-block;\n    padding: var(--bs-btn-padding-y) var(--bs-btn-padding-x);\n    color: var(--bs-btn-color);\n    text-align: center;\n    text-decoration: none;\n    vertical-align: middle;\n    cursor: pointer;\n    -webkit-user-select: none;\n    user-select: none;\n    border: var(--bs-btn-border-width) solid var(--bs-btn-border-color);\n    border-radius: var(--bs-btn-border-radius);\n    background-color: var(--bs-btn-bg);\n    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n\n.transparent-dice {\n    color: transparent;\n    cursor: auto;\n}\n\n.transparent-dice:active {\n    color: transparent;\n    background-color: transparent;\n    border-color: transparent;\n}\n\n.btn:disabled, .btn.disabled, fieldset:disabled .btn, .btn-dice:disabled, .btn-play:disabled {\n    border-color: transparent;\n    opacity: 40%;\n    cursor: auto;\n}\n\n.bg-border {\n    border: solid 1px lightgray;\n    border-top: none;\n}\n\n.bg-width {\n    max-width: 40rem;\n    width: 40rem;\n}\n\n.dice-size {\n    font-size: calc(2.5rem + 2vw);\n}\n\n.play-btn-icon{\n    font-size: calc(2rem + (1vw));\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddPlayersComponent', 'selector': 'app-addPlayers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DicesComponent', 'selector': 'app-dices'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'ScoreBoardComponent', 'selector': 'app-scoreBoard'},{'name': 'SetScoreConfirmationComponent', 'selector': 'app-set-score-confirmation'},{'name': 'SoundComponent', 'selector': 'app-sound'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DicesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Die.html":{"url":"classes/Die.html","title":"class - Die","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Die\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/die.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                die\n                            \n                            \n                                    Public\n                                selected\n                            \n                            \n                                    Public\n                                side\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(die: number, side: number, selected: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/die.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        die\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        side\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selected\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        die\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/die.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/die.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        side\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/die.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Die {\n    public die: number;\n    public side: number;\n    public selected: boolean;\n\n    constructor(die: number, side: number, selected: boolean){\n        this.die = die;\n        this.side = side;\n        this.selected = selected;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponent.html":{"url":"components/GameComponent.html","title":"component - GameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/game/game.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game\n            \n\n            \n                styleUrls\n                ./game.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amtOfPlayers\n                            \n                            \n                                    Private\n                                amtOfPlayers$\n                            \n                            \n                                    Private\n                                disconnectedInQueue$\n                            \n                            \n                                    Public\n                                fullGame\n                            \n                            \n                                    Private\n                                fullGame$\n                            \n                            \n                                    Private\n                                getRoom$\n                            \n                            \n                                    Public\n                                maxPlayers\n                            \n                            \n                                    Private\n                                maxPlayers$\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(socketService: SocketService, playerService: PlayerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/game/game.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socketService\n                                                  \n                                                        \n                                                                        SocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/game/game.component.ts:98\n                \n            \n\n\n            \n                \n                    Unsubscribes from observables.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/game/game.component.ts:47\n                \n            \n\n\n            \n                \n                    Retrieves if the socket-room is full or not\nRetrieves the socket-room name.\nRetrieves both current amount of players connected to current socket-room and users chosen maxplayer limit\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        amtOfPlayers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        amtOfPlayers$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        disconnectedInQueue$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fullGame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fullGame$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getRoom$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        maxPlayers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        maxPlayers$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : [this.amtOfPlayers$, this.disconnectedInQueue$, this.fullGame$, this.getRoom$, this.maxPlayers$]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { PlatformLocation } from '@angular/common';\nimport { Component, OnDestroy, OnInit, HostListener } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { Subscription, take } from 'rxjs';\nimport { PlayerService } from 'src/app/services/player.service';\nimport { SocketService } from 'src/app/services/socket.service';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit, OnDestroy {\n  public fullGame: boolean = false;\n  public amtOfPlayers: number = 1;\n  public maxPlayers: number = 0;\n\n  //Subscriptions\n  private fullGame$: Subscription = new Subscription;\n  private getRoom$: Subscription = new Subscription;\n  private amtOfPlayers$: Subscription = new Subscription;\n  private disconnectedInQueue$: Subscription = new Subscription;\n  private maxPlayers$: Subscription = new Subscription;\n  private subscriptions: Subscription[] = [this.amtOfPlayers$, this.disconnectedInQueue$, this.fullGame$, this.getRoom$, this.maxPlayers$]\n\n  constructor(private socketService: SocketService, private playerService: PlayerService, private router: Router) {\n    //To prevent possibility to go back and forth into game.\n    router.events.forEach((event) => {\n      if(event instanceof NavigationStart) {\n        if (event.navigationTrigger === 'popstate') {\n          router.navigate([''], {skipLocationChange: true})\n        }\n      }\n    });\n   }\n\n   /**\n    * Retrieves if the socket-room is full or not\n    * Retrieves the socket-room name.\n    * Retrieves both current amount of players connected to current socket-room and users chosen maxplayer limit\n    * @date 2023-01-31 - 13:20:08\n    * @author Christopher Reineborn\n    *\n    * @returns {*}\n    */\n\n  ngOnInit(): void {\n    //Subscribes to chosen max players\n    this.maxPlayers$ = this.playerService.getChosenMaxPlayers().subscribe(players => {\n      this.maxPlayers = players;\n\n      if(this.maxPlayers === 1){\n        this.fullGame = true;\n      }\n    })\n\n    //Subscribes to get when current room is full from the backend\n    this.fullGame$ = this.socketService.getRoomFull().subscribe(status => {\n      if(status){\n        this.fullGame = true;\n      }\n    })\n\n    //Subscribes to recieve number of players in the room from the backend\n    this.amtOfPlayers$ = this.socketService.getAmtOfPlayersInRoom().subscribe(amtOfPlayers => {\n      this.amtOfPlayers = Number(amtOfPlayers);\n    })\n\n    //Subscribes to recieve the room name from the backend.\n    //Used to emit stuff to the same room socket is in.\n    this.getRoom$ = this.socketService.getRoomName().subscribe(room => {\n      this.socketService.setRoomName(room);\n    })\n\n    //Depending on the amount of maxPlayers, subscribes to get disconnects while in queue.\n    if(this.maxPlayers === 2){\n      this.disconnectedInQueue$ = this.socketService.getDisconnectedPlayerInTwoQueue().subscribe(amtOfPlayers => {\n        this.amtOfPlayers = amtOfPlayers;\n      })\n    }\n    if(this.maxPlayers === 3){\n      this.disconnectedInQueue$ = this.socketService.getDisconnectedPlayerInThreeQueue().subscribe(amtOfPlayers => {\n        this.amtOfPlayers = amtOfPlayers;\n      })\n    }\n    if(this.maxPlayers === 4){\n      this.disconnectedInQueue$ = this.socketService.getDisconnectedPlayerInFourQueue().subscribe(amtOfPlayers => {\n        this.amtOfPlayers = amtOfPlayers;\n      })\n    }\n  }\n \n  /**\n   * Unsubscribes from observables.\n   * @date 2023-01-31 - 13:42:37\n   * @author Christopher Reineborn\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    })\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          Loading...\n        \n        \n          Waiting for other players...\n          {{amtOfPlayers}}/{{maxPlayers}}\n        \n      \n    \n  \n\n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./game.component.css\n                \n                .not-full-game{\n    pointer-events:none;\n}\n\n.loading {\n    border-bottom-left-radius: 0.375rem;\n    border-bottom-right-radius: 0.375rem;\n    border-radius: 0.375rem;\n    z-index: 2;\n    position: fixed;\n    top: 5%;\n    bottom: 5%;\n    left: 0;\n    right: 0;\n    margin: auto;\n}\n\n.backdrop {\n    background: rgba(0, 0, 0, 0.25);\n    position: fixed;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    z-index: 1;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Loading...                          Waiting for other players...          {{amtOfPlayers}}/{{maxPlayers}}                                '\n    var COMPONENTS = [{'name': 'AddPlayersComponent', 'selector': 'app-addPlayers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DicesComponent', 'selector': 'app-dices'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'ScoreBoardComponent', 'selector': 'app-scoreBoard'},{'name': 'SetScoreConfirmationComponent', 'selector': 'app-set-score-confirmation'},{'name': 'SoundComponent', 'selector': 'app-sound'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/landing-page/landing-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                styleUrls\n                ./landing-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/landing-page/landing-page.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent {\n\n  constructor(private router: Router) {\n    //To prevent possibility to go back and forth into game.\n    router.events.forEach((event) => {\n      if(event instanceof NavigationStart) {\n        if (event.navigationTrigger === 'popstate') {\n          router.navigate([''], {skipLocationChange: true})\n        }\n      }\n    });\n   }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./landing-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddPlayersComponent', 'selector': 'app-addPlayers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DicesComponent', 'selector': 'app-dices'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'ScoreBoardComponent', 'selector': 'app-scoreBoard'},{'name': 'SetScoreConfirmationComponent', 'selector': 'app-set-score-confirmation'},{'name': 'SoundComponent', 'selector': 'app-sound'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageComponent.html":{"url":"components/LanguageComponent.html","title":"component - LanguageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LanguageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/language/language.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-language\n            \n\n            \n                styleUrls\n                ./language.component.css\n            \n\n\n\n            \n                templateUrl\n                ./language.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                langChange$\n                            \n                            \n                                    Public\n                                languageList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSiteLanguage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/language/language.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeSiteLanguage\n                        \n                    \n                \n            \n            \n                \nchangeSiteLanguage(localeCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/language/language.component.ts:57\n                \n            \n\n\n            \n                \n                    Changes the site language.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    localeCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ncode used to determine what language to use.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/language/language.component.ts:46\n                \n            \n\n\n            \n                \n                    Unsubscribes from observable\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/language/language.component.ts:27\n                \n            \n\n\n            \n                \n                    Fetches the @param locale in localStorage in order to retrieve the users last chosen locale.\nSubscribes to language change.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        langChange$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/language/language.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        languageList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { code: 'sv', label: this.translate.instant('LANGUAGES.SWEDISH'), flag: 'assets/images/sweden.png'},\n    { code: 'en', label: this.translate.instant('LANGUAGES.ENGLISH'), flag: 'assets/images/united-states.png'},\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/language/language.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { LangChangeEvent, TranslateService } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-language',\n  templateUrl: './language.component.html',\n  styleUrls: ['./language.component.css']\n})\nexport class LanguageComponent implements OnInit, OnDestroy {\n  public languageList = [\n    { code: 'sv', label: this.translate.instant('LANGUAGES.SWEDISH'), flag: 'assets/images/sweden.png'},\n    { code: 'en', label: this.translate.instant('LANGUAGES.ENGLISH'), flag: 'assets/images/united-states.png'},\n  ];\n\n  private langChange$: Subscription = new Subscription();\n\n  constructor(private translate: TranslateService) { }\n\n\n  \n  /**\n   * Fetches the @param locale in localStorage in order to retrieve the users last chosen locale.\n   * Subscribes to language change.\n   * @date 2/15/2023 - 11:14:14 AM\n   */\n  ngOnInit(): void {\n    const locale = localStorage.getItem('locale');\n    locale ? this.changeSiteLanguage(locale) : null;\n\n    this.langChange$ = this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\n      this.translate.stream('LANGUAGES').subscribe(translation => {\n        const languages: string[] = Object.keys(translation);\n        for(let i = 0; i  language.code === localeCode)?.label.toString();\n    if (selectedLanguage) {\n      this.translate.use(localeCode);\n      localStorage.setItem('locale', localeCode);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n            {{language.label}}\n        \n    \n\n\n\n    \n\n    \n                \n                    ./language.component.css\n                \n                .flag {\n    --heightwidth: 1.5rem;\n    height:var(--heightwidth);\n    width:var(--heightwidth);\n}\n\n.icon {\n    background: transparent;\n    border: none;\n    font-size: 1.5rem;\n}\n\n.icon::after {\n    visibility: hidden;\n}\n\n.icon:hover {\n    color: rgb(20,20,20)\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{language.label}}            '\n    var COMPONENTS = [{'name': 'AddPlayersComponent', 'selector': 'app-addPlayers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DicesComponent', 'selector': 'app-dices'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'ScoreBoardComponent', 'selector': 'app-scoreBoard'},{'name': 'SetScoreConfirmationComponent', 'selector': 'app-set-score-confirmation'},{'name': 'SoundComponent', 'selector': 'app-sound'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LanguageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Player.html":{"url":"classes/Player.html","title":"class - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/player.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPlayer\n                            \n                            \n                                name\n                            \n                            \n                                score\n                            \n                            \n                                socketId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, socketId: string, currentPlayer: boolean, score: ScoreBoard)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/player.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socketId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        currentPlayer\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        score\n                                                  \n                                                        \n                                                                        ScoreBoard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/player.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/player.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScoreBoard\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/player.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        socketId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/player.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ScoreBoard } from \"./score-board\";\n\nexport class Player {\n    name: string;\n    socketId: string;\n    currentPlayer: boolean;\n    score: ScoreBoard;\n\n    constructor(name: string, socketId: string, currentPlayer: boolean, score: ScoreBoard){\n        this.name = name;\n        this.socketId = socketId;\n        this.currentPlayer = currentPlayer;\n        this.score = score;\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chosenMaxPlayers\n                            \n                            \n                                    Private\n                                clientPlayer\n                            \n                            \n                                    Private\n                                currentPlayer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getChosenMaxPlayers\n                            \n                            \n                                    Public\n                                getClientPlayer\n                            \n                            \n                                    Public\n                                getCurrentPlayer\n                            \n                            \n                                    Public\n                                setChosenMaxPlayers\n                            \n                            \n                                    Public\n                                setClientPlayer\n                            \n                            \n                                    Public\n                                setCurrentPlayer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(diceService: DiceService, scoreService: ScoreService, translateService: TranslateService, modal: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/player.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        diceService\n                                                  \n                                                        \n                                                                        DiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scoreService\n                                                  \n                                                        \n                                                                        ScoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getChosenMaxPlayers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChosenMaxPlayers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/player.service.ts:92\n                \n            \n\n\n            \n                \n                    Distributes the chosen max player to subscribers.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \nAn observable of the chosen max player.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getClientPlayer\n                        \n                    \n                \n            \n            \n                \n                    \n                    getClientPlayer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/player.service.ts:41\n                \n            \n\n\n            \n                \n                    Return the client player\n\n\n                    \n                    \n                    \n                        Returns :         Player\n\n                    \n                    \n                        \nthe client player\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCurrentPlayer\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentPlayer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/player.service.ts:66\n                \n            \n\n\n            \n                \n                    Distributes the current player to subscribers.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \nAn observable of the current player.\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setChosenMaxPlayers\n                        \n                    \n                \n            \n            \n                \n                    \n                    setChosenMaxPlayers(maxPlayers: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/player.service.ts:79\n                \n            \n\n\n            \n                \n                    Setting the chosen max player\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    maxPlayers\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nChosen max player to be set in the Subject\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setClientPlayer\n                        \n                    \n                \n            \n            \n                \n                    \n                    setClientPlayer(player: Player)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/player.service.ts:29\n                \n            \n\n\n            \n                \n                    Setting the client player\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                Player\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe client player.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCurrentPlayer\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentPlayer(player: Player)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/player.service.ts:53\n                \n            \n\n\n            \n                \n                    Setting the current player to be distributed to subscribers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                Player\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nCurrent player to be set in the Subject\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chosenMaxPlayers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/player.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clientPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player\n\n                    \n                \n                \n                    \n                        Default value : {name: \"\", socketId: \"\", currentPlayer: true, score: new ScoreBoard(this.diceService, this.scoreService, this.translateService, this.modal)}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/player.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/player.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { Player } from '../models/player';\nimport { ScoreBoard } from '../models/score-board';\nimport { DiceService } from './dice.service';\nimport { ScoreService } from './score.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n  private clientPlayer: Player = {name: \"\", socketId: \"\", currentPlayer: true, score: new ScoreBoard(this.diceService, this.scoreService, this.translateService, this.modal)};\n  private currentPlayer = new Subject();\n  private chosenMaxPlayers = new BehaviorSubject(0);\n\n  constructor(private diceService: DiceService, private scoreService: ScoreService, private translateService: TranslateService, private modal: NgbModal) { }\n\n  \n  /**\n   * Setting the client player\n   * @date 2/15/2023 - 2:18:07 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @param {Player} player - the client player.\n   */\n  public setClientPlayer(player: Player): void {\n    this.clientPlayer = player\n  }\n\n  /**\n   * Return the client player\n   * @date 2/15/2023 - 2:18:26 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @returns {Player} - the client player\n   */\n  public getClientPlayer(): Player {\n    return this.clientPlayer;\n  }\n\n  /**\n   * Setting the current player to be distributed to subscribers\n   * @date 2/15/2023 - 2:19:09 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @param {Player} player - Current player to be set in the Subject\n   */\n  public setCurrentPlayer(player: Player): void {\n    this.currentPlayer.next(player);\n  }\n\n  \n  /**\n   * Distributes the current player to subscribers.\n   * @date 2/15/2023 - 2:20:01 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @returns {Observable} - An observable of the current player.\n   */\n  public getCurrentPlayer(): Observable {\n    return this.currentPlayer.asObservable();\n  }\n\n  \n  /**\n   * Setting the chosen max player\n   * @date 2/15/2023 - 2:20:32 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @param {number} maxPlayers - Chosen max player to be set in the Subject\n   */\n  public setChosenMaxPlayers(maxPlayers: number): void {\n    this.chosenMaxPlayers.next(maxPlayers);\n  }\n\n  \n  /**\n   * Distributes the chosen max player to subscribers.\n   * @date 2/15/2023 - 2:46:40 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @returns {Observable} - An observable of the chosen max player.\n   */\n  public getChosenMaxPlayers(): Observable {\n    return this.chosenMaxPlayers.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScoreRow.html":{"url":"classes/ScoreRow.html","title":"class - ScoreRow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScoreRow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/score-row.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                bonusApplied\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                score\n                            \n                            \n                                    Public\n                                selectable\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, score: number, selectable: boolean, bonusApplied?: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/score-row.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        score\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bonusApplied\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        bonusApplied\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/score-row.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/score-row.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/score-row.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/score-row.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ScoreRow {\n    public name: string;\n    public score: number;\n    public selectable: boolean;\n    public bonusApplied?: boolean;\n\n    constructor(name: string, score: number, selectable: boolean, bonusApplied?: boolean){\n        this.name = name;\n        this.score = score;\n        this.selectable = selectable;\n        this.bonusApplied = bonusApplied;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScoreService.html":{"url":"injectables/ScoreService.html","title":"injectable - ScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/score.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endOfGame\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getEndOfGame\n                            \n                            \n                                    Public\n                                setEndOfGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socketService: SocketService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/score.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socketService\n                                                  \n                                                        \n                                                                        SocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getEndOfGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEndOfGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/score.service.ts:36\n                \n            \n\n\n            \n                \n                    Distributes the end of game to subscribers\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \nAn observable of the end of game\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setEndOfGame\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEndOfGame(endOfGame: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/score.service.ts:22\n                \n            \n\n\n            \n                \n                    Setting the end of game in the subject and emits it to the backend\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    endOfGame\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nboolean to see if the game is done\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        endOfGame\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/score.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { SocketService } from './socket.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScoreService {\n  private endOfGame = new Subject();\n\n  constructor(private socketService: SocketService) { }\n\n  \n  /**\n   * Setting the end of game in the subject and emits it to the backend\n   * @date 2/15/2023 - 2:47:30 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @param {boolean} endOfGame - boolean to see if the game is done\n   */\n  public setEndOfGame(endOfGame: boolean): void {\n    this.socketService.setGameEnd(this.socketService.roomName);\n    this.endOfGame.next(endOfGame);\n  }\n\n  \n  /**\n   * Distributes the end of game to subscribers\n   * @date 2/15/2023 - 2:48:26 PM\n   * @author Christopher Reineborn\n   *\n   * @public\n   * @returns {Observable} - An observable of the end of game\n   */\n  public getEndOfGame(): Observable {\n    return this.endOfGame.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SetScoreConfirmationComponent.html":{"url":"components/SetScoreConfirmationComponent.html","title":"component - SetScoreConfirmationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SetScoreConfirmationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modals/set-score-confirmation/set-score-confirmation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-set-score-confirmation\n            \n\n            \n                styleUrls\n                ./set-score-confirmation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./set-score-confirmation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeModal\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scoreRow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeModal: NgbActiveModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/modals/set-score-confirmation/set-score-confirmation.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeModal\n                                                  \n                                                        \n                                                                    NgbActiveModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scoreRow\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/modals/set-score-confirmation/set-score-confirmation.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbActiveModal\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/modals/set-score-confirmation/set-score-confirmation.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-set-score-confirmation',\n  templateUrl: './set-score-confirmation.component.html',\n  styleUrls: ['./set-score-confirmation.component.css']\n})\nexport class SetScoreConfirmationComponent {\n  @Input() scoreRow: string = \"\";\n\n  constructor(public activeModal: NgbActiveModal) { }\n\n}\n\n    \n\n    \n        \n    {{'MODAL.CONFIRM' | translate}}\n    \n  \n\n    {{ 'MODAL.SETSCORE' | translate: {value: scoreRow} }}\n\n\n    {{'MODAL.NO' | translate}}\n    {{'MODAL.YES' | translate}}\n\n\n\n\n\n\n    \n\n    \n                \n                    ./set-score-confirmation.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{\\'MODAL.CONFIRM\\' | translate}}          {{ \\'MODAL.SETSCORE\\' | translate: {value: scoreRow} }}    {{\\'MODAL.NO\\' | translate}}    {{\\'MODAL.YES\\' | translate}}'\n    var COMPONENTS = [{'name': 'AddPlayersComponent', 'selector': 'app-addPlayers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DicesComponent', 'selector': 'app-dices'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'ScoreBoardComponent', 'selector': 'app-scoreBoard'},{'name': 'SetScoreConfirmationComponent', 'selector': 'app-set-score-confirmation'},{'name': 'SoundComponent', 'selector': 'app-sound'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SetScoreConfirmationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocketService.html":{"url":"injectables/SocketService.html","title":"injectable - SocketService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/socket.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                roomName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                diceHit\n                            \n                            \n                                diceMoving\n                            \n                            \n                                getAmtOfPlayersInRoom\n                            \n                            \n                                getCurrentPlayerResult\n                            \n                            \n                                getDiceHit\n                            \n                            \n                                getDiceMovement\n                            \n                            \n                                getDisconnectedPlayer\n                            \n                            \n                                getDisconnectedPlayerInFourQueue\n                            \n                            \n                                getDisconnectedPlayerInThreeQueue\n                            \n                            \n                                getDisconnectedPlayerInTwoQueue\n                            \n                            \n                                getOnlineCheck\n                            \n                            \n                                getPlayers\n                            \n                            \n                                getQueueNumbers\n                            \n                            \n                                getRoomFull\n                            \n                            \n                                getRoomName\n                            \n                            \n                                getUserID\n                            \n                            \n                                joinRoom\n                            \n                            \n                                nextPlayer\n                            \n                            \n                                setGameEnd\n                            \n                            \n                                setRoomName\n                            \n                            \n                                triggerOnlineCheck\n                            \n                            \n                                triggerQueueNumbers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socket: Socket)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/socket.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                    Socket\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        diceHit\n                        \n                    \n                \n            \n            \n                \ndiceHit(dice: Die[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:45\n                \n            \n\n\n            \n                \n                    Emits an array of dice that was the user hit.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dice\n                                    \n                                                Die[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe array of dice that was hit.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        diceMoving\n                        \n                    \n                \n            \n            \n                \ndiceMoving(incDice: Die[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:57\n                \n            \n\n\n            \n                \n                    Emits the arrays availableDice and savedDice.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    incDice\n                                    \n                                                Die[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAmtOfPlayersInRoom\n                        \n                    \n                \n            \n            \n                \ngetAmtOfPlayersInRoom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:150\n                \n            \n\n\n            \n                \n                    Distributes the number of players currently in the socket room\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentPlayerResult\n                        \n                    \n                \n            \n            \n                \ngetCurrentPlayerResult()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:184\n                \n            \n\n\n            \n                \n                    Distributes what scorerow and dice the emitting player used to put score\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDiceHit\n                        \n                    \n                \n            \n            \n                \ngetDiceHit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:161\n                \n            \n\n\n            \n                \n                    Distributes the array of dice that was hit from the backend.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDiceMovement\n                        \n                    \n                \n            \n            \n                \ngetDiceMovement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:173\n                \n            \n\n\n            \n                \n                    Distributes the arrays of saved and available dice.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisconnectedPlayer\n                        \n                    \n                \n            \n            \n                \ngetDisconnectedPlayer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:206\n                \n            \n\n\n            \n                \n                    Distributes disconnected player\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisconnectedPlayerInFourQueue\n                        \n                    \n                \n            \n            \n                \ngetDisconnectedPlayerInFourQueue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:239\n                \n            \n\n\n            \n                \n                    Distributes disconnected player while in four player queue.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisconnectedPlayerInThreeQueue\n                        \n                    \n                \n            \n            \n                \ngetDisconnectedPlayerInThreeQueue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:228\n                \n            \n\n\n            \n                \n                    Distributes disconnected player while in three player queue.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisconnectedPlayerInTwoQueue\n                        \n                    \n                \n            \n            \n                \ngetDisconnectedPlayerInTwoQueue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:217\n                \n            \n\n\n            \n                \n                    Distributes disconnected player while in two player queue.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOnlineCheck\n                        \n                    \n                \n            \n            \n                \ngetOnlineCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:250\n                \n            \n\n\n            \n                \n                    Distributes wether server is online or not\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:140\n                \n            \n\n\n            \n                \n                    Distributes the array of players in the game room from the backend.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQueueNumbers\n                        \n                    \n                \n            \n            \n                \ngetQueueNumbers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:262\n                \n            \n\n\n            \n                \n                    Distributes the queue numbers.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoomFull\n                        \n                    \n                \n            \n            \n                \ngetRoomFull()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:129\n                \n            \n\n\n            \n                \n                    Distributes if the game room is full from the backend\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoomName\n                        \n                    \n                \n            \n            \n                \ngetRoomName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:118\n                \n            \n\n\n            \n                \n                    Distributes the room name from the backend\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserID\n                        \n                    \n                \n            \n            \n                \ngetUserID()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:195\n                \n            \n\n\n            \n                \n                    Distributes the users socket id from the backend\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinRoom\n                        \n                    \n                \n            \n            \n                \njoinRoom(player: string, maxPlayers: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:34\n                \n            \n\n\n            \n                \n                    Emits the name the user typed in.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nname of the player\n\n\n                                    \n                                \n                                \n                                    maxPlayers\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextPlayer\n                        \n                    \n                \n            \n            \n                \nnextPlayer(scoreRowName: string, dice: Die[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:70\n                \n            \n\n\n            \n                \n                    Emit the scorerow name and array of dice used to place score\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scoreRowName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nname of the scorerow to place score on\n\n\n                                    \n                                \n                                \n                                    dice\n                                    \n                                                Die[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe dice to base the score upon\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameEnd\n                        \n                    \n                \n            \n            \n                \nsetGameEnd(room: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:81\n                \n            \n\n\n            \n                \n                    Emit that the game has ended.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nroom to distribute the message to.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRoomName\n                        \n                    \n                \n            \n            \n                \nsetRoomName(room: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:105\n                \n            \n\n\n            \n                \n                    Method to set the room name locally\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nroom name to be set.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerOnlineCheck\n                        \n                    \n                \n            \n            \n                \ntriggerOnlineCheck(x: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:23\n                \n            \n\n\n            \n                \n                    Emitting random value in order to trigger online-check from server.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerQueueNumbers\n                        \n                    \n                \n            \n            \n                \ntriggerQueueNumbers(x: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/socket.service.ts:93\n                \n            \n\n\n            \n                \n                    Trigger to recieve queue numbers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        roomName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/socket.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io'\nimport { Die } from '../models/die';\nimport { Player } from '../models/player';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n  public roomName: string = \"\";\n  \n  constructor(private socket: Socket) {\n  }\n\n  //Emits\n   /**\n    * Emitting random value in order to trigger online-check from server.\n    * @date 2023-02-02 - 15:28:15\n    * @author Christopher Reineborn\n    *\n    * @returns {*}\n    */\n  triggerOnlineCheck(x: any){\n    this.socket.emit('checkOnline', x);\n  }\n\n  /**\n   * Emits the name the user typed in.\n   * @date 2023-01-31 - 14:58:21\n   * @author Christopher Reineborn\n   *\n   * @param {string} player - name of the player\n   */\n  joinRoom(player: string, maxPlayers: number) {\n    this.socket.emit('joinRoom', player, maxPlayers);\n  }\n  \n  /**\n   * Emits an array of dice that was the user hit.\n   * @date 2023-01-31 - 14:59:33\n   * @author Christopher Reineborn\n   *\n   * @param {Die[]} dice - the array of dice that was hit.\n   */\n  diceHit(dice: Die[] ) {\n    this.socket.emit('diceHit', dice, this.roomName);\n  }\n\n  /**\n   * Emits the arrays availableDice and savedDice.\n   * @date 2023-01-31 - 15:02:41\n   * @author Christopher Reineborn\n   *\n   * @param {Die[]} availableDice - array of available dice\n   * @param {Die[]} savedDice - array of saved dice\n   */\n  diceMoving(incDice: Die[]){\n    let dice: Die[] = incDice;\n    this.socket.emit('diceMove', dice, this.roomName)\n  }\n  \n  /**\n   * Emit the scorerow name and array of dice used to place score\n   * @date 2023-01-31 - 15:06:09\n   * @author Christopher Reineborn\n   *\n   * @param {string} scoreRowName - name of the scorerow to place score on\n   * @param {Die[]} dice - the dice to base the score upon\n   */\n  nextPlayer(scoreRowName: string, dice: Die[]){\n    this.socket.emit('nextPlayer', scoreRowName, dice, this.roomName);\n  }\n\n  /**\n   * Emit that the game has ended.\n   * @date 2/15/2023 - 2:50:09 PM\n   * @author Christopher Reineborn\n   *\n   * @param {string} room - room to distribute the message to.\n   */\n  setGameEnd(room: string){\n    this.socket.emit('gameDone', room);\n  }\n\n  \n  /**\n   * Trigger to recieve queue numbers\n   * @date 2/15/2023 - 2:50:45 PM\n   * @author Christopher Reineborn\n   *\n   * @param {*} x\n   */\n  triggerQueueNumbers(x: any){\n    this.socket.emit('triggerQueue', x);\n  }\n  \n  \n  /**\n   * Method to set the room name locally\n   * @date 2/15/2023 - 2:53:07 PM\n   * @author Christopher Reineborn\n   *\n   * @param {string} room - room name to be set.\n   */\n  setRoomName(room: string){\n    this.roomName = room;\n  }\n\n  //Recieves\n\n  /**\n   * Distributes the room name from the backend\n   * @date 2023-01-31 - 15:09:54\n   * @author Christopher Reineborn\n   * \n   * @returns {*}\n   */\n  getRoomName(){\n   return this.socket.fromEvent('roomName');\n  }\n  \n  /**\n   * Distributes if the game room is full from the backend\n   * @date 2023-01-31 - 15:10:34\n   * @author Christopher Reineborn \n   *\n   * @returns {*}\n   */\n  getRoomFull(){\n    return this.socket.fromEvent('fullGame');\n  }\n\n  /**\n   * Distributes the array of players in the game room from the backend.\n   * @date 2023-01-31 - 15:11:04\n   * @author Christopher Reineborn\n   *\n   * @returns {*}\n   */\n  getPlayers() {\n    return this.socket.fromEvent('players');\n  }\n\n  /**\n   * Distributes the number of players currently in the socket room\n   * @date 2023-02-02 - 15:30:21\n   *\n   * @returns {*}\n   */\n  getAmtOfPlayersInRoom(){\n    return this.socket.fromEvent('amtOfPlayers')\n  }\n\n  /**\n   * Distributes the array of dice that was hit from the backend.\n   * @date 2023-01-31 - 15:12:19\n   * @author Christopher Reineborn\n   *\n   * @returns {*}\n   */\n  getDiceHit(){\n    return this.socket.fromEvent('getDice');\n  }\n\n  \n  /**\n   * Distributes the arrays of saved and available dice.\n   * @date 2023-01-31 - 15:12:54\n   * @author Christopher Reineborn\n   *\n   * @returns {*}\n   */\n  getDiceMovement(){\n    return this.socket.fromEvent('getDiceMovement');\n  }\n\n  /**\n   * Distributes what scorerow and dice the emitting player used to put score\n   * @date 2023-01-31 - 15:13:40\n   * @author Christopher Reineborn\n   *\n   * @returns {*}\n   */\n  getCurrentPlayerResult(){\n    return this.socket.fromEvent('getNextPlayer');\n  }\n\n  /**\n   * Distributes the users socket id from the backend\n   * @date 2023-01-31 - 15:14:34\n   * @author Christopher Reineborn\n   *\n   * @returns {*}\n   */\n  getUserID(){\n    return this.socket.fromEvent('userID');\n  }\n  \n  /**\n   * Distributes disconnected player\n   * @date 2023-02-02 - 15:31:13\n   * @author Christopher Reineborn\n   *\n   * @returns {*}\n   */\n  getDisconnectedPlayer(){\n    return this.socket.fromEvent('disconnected');\n  }\n  \n  /**\n   * Distributes disconnected player while in two player queue.\n   * @date 2023-02-02 - 15:31:58\n   * @author Christopher Reineborn\n   *\n   * @returns {*}\n   */\n  getDisconnectedPlayerInTwoQueue(){\n    return this.socket.fromEvent('disconnectedInQueueTwo')\n  }\n  \n  /**\n   * Distributes disconnected player while in three player queue.\n   * @date 2023-02-02 - 15:32:26\n   * @author Christopher Reineborn\n   *\n   * @returns {*}\n   */\n  getDisconnectedPlayerInThreeQueue(){\n    return this.socket.fromEvent('disconnectedInQueueThree')\n  }\n  \n  /**\n   * Distributes disconnected player while in four player queue.\n   * @date 2023-02-02 - 15:32:37\n   * @author Christopher Reineborn\n   *\n   * @returns {*}\n   */\n  getDisconnectedPlayerInFourQueue(){\n    return this.socket.fromEvent('disconnectedInQueueFour')\n  }\n\n  /**\n   * Distributes wether server is online or not\n   * @date 2023-02-02 - 15:32:47\n   * @author Christopher Reineborn\n   *\n   * @returns {*}\n   */\n  getOnlineCheck(){\n    return this.socket.fromEvent('online');\n  }\n\n  \n  /**\n   * Distributes the queue numbers.\n   * @date 2/15/2023 - 2:49:19 PM\n   * @author Christopher Reineborn\n   *\n   * @returns {*}\n   */\n  getQueueNumbers(){\n    return this.socket.fromEvent('queueNumbers');\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SoundComponent.html":{"url":"components/SoundComponent.html","title":"component - SoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sound/sound.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sound\n            \n\n            \n                styleUrls\n                ./sound.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sound.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                enableSound\n                            \n                            \n                                muteSound\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(clientService: ClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/sound/sound.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientService\n                                                  \n                                                        \n                                                                        ClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        enableSound\n                        \n                    \n                \n            \n            \n                \nenableSound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/sound/sound.component.ts:39\n                \n            \n\n\n            \n                \n                    Enables the sound for all audio.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        muteSound\n                        \n                    \n                \n            \n            \n                \nmuteSound()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/sound/sound.component.ts:28\n                \n            \n\n\n            \n                \n                    Mutes the sound for all audio.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/sound/sound.component.ts:19\n                \n            \n\n\n            \n                \n                    Fetches the @param sound from localestorage in order to use the users last chosen state on sound.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        sound\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/sound/sound.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ClientService } from 'src/app/services/client.service';\n\n@Component({\n  selector: 'app-sound',\n  templateUrl: './sound.component.html',\n  styleUrls: ['./sound.component.css']\n})\nexport class SoundComponent implements OnInit {\n  sound: boolean = true;\n\n  constructor(private clientService: ClientService) { }\n\n  \n  /**\n   * Fetches the @param sound from localestorage in order to use the users last chosen state on sound.\n   * @date 2/15/2023 - 11:17:21 AM\n   */\n  ngOnInit(): void {\n    localStorage.getItem('sound') === 'true' ? this.enableSound() : this.muteSound();\n  }\n\n  \n  /**\n   * Mutes the sound for all audio.\n   * @date 2/15/2023 - 11:18:29 AM\n   */\n  muteSound(){\n    this.sound = false;\n    this.clientService.setSound(false);\n    localStorage.setItem('sound', 'false')\n  }\n\n  \n  /**\n   * Enables the sound for all audio.\n   * @date 2/15/2023 - 11:18:44 AM\n   */\n  enableSound(){\n    this.sound = true;\n    this.clientService.setSound(true);\n    localStorage.setItem('sound', 'true')\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./sound.component.css\n                \n                .icon {\n    background: transparent;\n    border: none;\n    font-size: 1.5rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddPlayersComponent', 'selector': 'app-addPlayers'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DicesComponent', 'selector': 'app-dices'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LanguageComponent', 'selector': 'app-language'},{'name': 'ScoreBoardComponent', 'selector': 'app-scoreBoard'},{'name': 'SetScoreConfirmationComponent', 'selector': 'app-set-score-confirmation'},{'name': 'SoundComponent', 'selector': 'app-sound'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/animations/rotate.animation.ts\n            \n            function\n            rotateAnimation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/animations/yourturn.animation.ts\n            \n            function\n            yourTurnAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/add-players/add-players.component.ts\n            \n            component\n            AddPlayersComponent\n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/app/components/dices/dices.component.ts\n            \n            component\n            DicesComponent\n            \n                22 %\n                (7/31)\n            \n        \n        \n            \n                \n                src/app/components/language/language.component.ts\n            \n            component\n            LanguageComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/components/modals/set-score-confirmation/set-score-confirmation.component.ts\n            \n            component\n            SetScoreConfirmationComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/score-board/score-board.component.ts\n            \n            component\n            ScoreBoardComponent\n            \n                19 %\n                (6/31)\n            \n        \n        \n            \n                \n                src/app/components/sound/sound.component.ts\n            \n            component\n            SoundComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/global/version.ts\n            \n            variable\n            version\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/die.ts\n            \n            class\n            Die\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/player.ts\n            \n            class\n            Player\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/score-board.ts\n            \n            class\n            ScoreBoard\n            \n                21 %\n                (7/33)\n            \n        \n        \n            \n                \n                src/app/models/score-row.ts\n            \n            class\n            ScoreRow\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/game/game.component.ts\n            \n            component\n            GameComponent\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/pages/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/client.service.ts\n            \n            injectable\n            ClientService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/services/dice.service.ts\n            \n            injectable\n            DiceService\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                src/app/services/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                src/app/services/score.service.ts\n            \n            injectable\n            ScoreService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/services/socket.service.ts\n            \n            injectable\n            SocketService\n            \n                88 %\n                (22/25)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.2.0\n        \n            @angular/common : ^14.2.0\n        \n            @angular/compiler : ^14.2.0\n        \n            @angular/core : ^14.2.0\n        \n            @angular/forms : ^14.2.0\n        \n            @angular/platform-browser : ^14.2.0\n        \n            @angular/platform-browser-dynamic : ^14.2.0\n        \n            @angular/router : ^14.2.0\n        \n            @ng-bootstrap/ng-bootstrap : ^13.1.0\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @ngx-translate/http-loader : ^7.0.0\n        \n            @popperjs/core : ^2.10.2\n        \n            bootstrap : ^5.2.2\n        \n            bootstrap-icons : ^1.9.1\n        \n            ngx-socket-io : ^4.3.1\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                        \n                            rotateAnimation   (src/.../rotate.animation.ts)\n                        \n                        \n                            yourTurnAnimation   (src/.../yourturn.animation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                                HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/animations/rotate.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        rotateAnimation\n                        \n                    \n                \n            \n            \n                \nrotateAnimation(spins: number, animationSpeed: number)\n                \n            \n\n\n\n\n            \n                \n                    Function that animates a rotation based upon the number of spins and how fast the animation should be.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    spins\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    animationSpeed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AnimationTriggerMetadata\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/animations/yourturn.animation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        yourTurnAnimation\n                        \n                    \n                \n            \n            \n                \nyourTurnAnimation(animationSpeed: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    animationSpeed\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AnimationTriggerMetadata\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nYatzy\nThis project was generated with Angular CLI version 14.2.6.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAddPlayersComponent\n\nAddPlayersComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddPlayersComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDicesComponent\n\nDicesComponent\n\nAppModule -->\n\nDicesComponent->AppModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nAppModule -->\n\nGameComponent->AppModule\n\n\n\n\n\nLandingPageComponent\n\nLandingPageComponent\n\nAppModule -->\n\nLandingPageComponent->AppModule\n\n\n\n\n\nLanguageComponent\n\nLanguageComponent\n\nAppModule -->\n\nLanguageComponent->AppModule\n\n\n\n\n\nScoreBoardComponent\n\nScoreBoardComponent\n\nAppModule -->\n\nScoreBoardComponent->AppModule\n\n\n\n\n\nSetScoreConfirmationComponent\n\nSetScoreConfirmationComponent\n\nAppModule -->\n\nSetScoreConfirmationComponent->AppModule\n\n\n\n\n\nSoundComponent\n\nSoundComponent\n\nAppModule -->\n\nSoundComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../app.module.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            version   (src/.../version.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SocketIoConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  url: environment.socketUrl,\n  options: {\n    transports: ['websocket'],\n    reconnection: false\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  socketUrl: 'http://localhost:3000'\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  socketUrl: 'yatzyserver-production.up.railway.app'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/global/version.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"v1.0.5.5\"\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
